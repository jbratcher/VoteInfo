{"version":3,"sources":["secrets.js","AddressForm.js","UserAddress.js","VoterInformation.js","Race.js","App.js","serviceWorker.js","index.js"],"names":["apikey","AddressForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","_this$props","handleInputChange","handleSubmit","react_default","a","createElement","className","htmlFor","type","name","aria-describedby","placeholder","onChange","id","onClick","Component","UserAddress","electionsData","normalizedInput","line1","line2","city","zip","VoterInformation","href","electionAdministrationBody","ballotInfoUrl","target","rel","electionInfoUrl","votingLocationFinderUrl","correspondenceAddress","data-toggle","data-target","aria-expanded","aria-controls","contests","map","contest","key","concat","String","fromCharCode","office","candidates","candidate","party","candidateUrl","App","e","setState","defineProperty","value","preventDefault","fetchElectionsData","_this$state","street1","voterInfoUrl","fetch","then","res","json","electionsDataRecieved","catch","error","electionsUrl","undefined","street2","country","_this$state2","role","src_AddressForm","src_UserAddress","src_VoterInformation","Race","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b6ebcb35.chunk.js","sourcesContent":["export const apikey = \"AIzaSyAGNAWHYmzPtl9h2vVMmLBhlD5o3Et1NCw\"\r\n\r\nexport default apikey;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddressForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"address form\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      handleInputChange,\r\n      handleSubmit\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card\">\r\n\r\n        <h2 className=\"card-title\">Enter your address:</h2>\r\n\r\n        <form>\r\n\r\n          <section className=\"form-group\">\r\n            <label htmlFor=\"street1\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"street1\"\r\n              aria-describedby=\"street1Help\"\r\n              placeholder=\"Street Address\"\r\n              onChange={handleInputChange}\r\n            >\r\n            </input>\r\n            <small\r\n              id=\"emailHelp\"\r\n              className=\"form-text text-muted\"\r\n            >\r\n              <em>ex. 1600 Pennsylvania Ave NW</em>\r\n            </small>\r\n          </section>\r\n\r\n          <section className=\"form-group\">\r\n            <label htmlFor=\"street2\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"street2\"\r\n              aria-describedby=\"street2Help\"\r\n              placeholder=\"Street Address cont.\"\r\n              onChange={handleInputChange}\r\n            >\r\n            </input>\r\n            <small\r\n              id=\"street2Help\"\r\n              className=\"form-text text-muted\"\r\n            >\r\n              <em>ex. Apt. 231</em>\r\n            </small>\r\n          </section>\r\n\r\n          <section className=\"form-group\">\r\n            <label htmlFor=\"city\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"city\"\r\n              aria-describedby=\"cityHelp\"\r\n              placeholder=\"City\"\r\n              onChange={handleInputChange}\r\n            >\r\n            </input>\r\n            <small\r\n              id=\"cityHelp\"\r\n              className=\"form-text text-muted\"\r\n            >\r\n              <em>ex. Washington</em>\r\n            </small>\r\n          </section>\r\n\r\n          <section className=\"form-group\">\r\n            <label htmlFor=\"state\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"state\"\r\n              aria-describedby=\"state\"\r\n              placeholder=\"State\"\r\n              onChange={handleInputChange}\r\n            >\r\n            </input>\r\n            <small\r\n              id=\"stateHelp\"\r\n              className=\"form-text text-muted\"\r\n            >\r\n              <em>ex. DC</em>\r\n            </small>\r\n          </section>\r\n\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Submit\r\n          </button>\r\n\r\n        </form>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddressForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass UserAddress extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"address form\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      electionsData\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card\">\r\n\r\n        <section className=\"card-body\">\r\n\r\n          <h4 className=\"card-title p-1\">Voter registration address: </h4>\r\n\r\n          <ul className=\"list-group list-group-flush pt-3 pb-4\">\r\n            <li className=\"card-text\">{electionsData.normalizedInput.line1}</li>\r\n            <li className=\"card-text\">{electionsData.normalizedInput.line2}</li>\r\n            <li className=\"card-text\">{electionsData.normalizedInput.city}</li>\r\n            <li className=\"card-text\">{electionsData.normalizedInput.state}</li>\r\n            <li className=\"card-text\">{electionsData.normalizedInput.zip}</li>\r\n          </ul>\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserAddress;\r\n","import React, { Component } from 'react';\r\n\r\nclass VoterInformation extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"address form\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      electionsData\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card\">\r\n\r\n        <section className=\"card-body\">\r\n\r\n          <h4 className=\"listHeader card-title mb-4\">\r\n            Voter Information\r\n          </h4>\r\n\r\n          <ul id=\"voterInformation\">\r\n\r\n            <li className=\"my-3\">\r\n              <a\r\n                href={electionsData.state[0].electionAdministrationBody.ballotInfoUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  Current Ballot\r\n                </button>\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"my-3\">\r\n              <a\r\n                href={electionsData.state[0].electionAdministrationBody.electionInfoUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\">\r\n                  <button type=\"button\" className=\"btn btn-primary\">\r\n                    Election Info\r\n                  </button>\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"my-3\">\r\n              <a\r\n                href={electionsData.state[0].electionAdministrationBody.votingLocationFinderUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\">\r\n                  <button type=\"button\" className=\"btn btn-primary\">\r\n                    Voting Location Info\r\n                  </button>\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"card-text my-3\">\r\n              <p><b>{electionsData.state[0].electionAdministrationBody.name}</b></p>\r\n              <p>{electionsData.state[0].electionAdministrationBody.correspondenceAddress.line1},</p>\r\n              <p>\r\n                {electionsData.state[0].electionAdministrationBody.correspondenceAddress.city}, {electionsData.state[0].electionAdministrationBody.correspondenceAddress.state}  {electionsData.state[0].electionAdministrationBody.correspondenceAddress.zip}\r\n              </p>\r\n            </li>\r\n\r\n          </ul>\r\n\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default VoterInformation;\r\n","import React, { Component } from 'react';\r\n\r\nclass UserAddress extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"address form\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      electionsData\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card text-center my-5\">\r\n\r\n        <button\r\n          className=\"py-3\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#senatorRace\"\r\n          aria-expanded=\"true\"\r\n          aria-controls=\"#senatorRace\"\r\n        >\r\n          Candidate Races for Office\r\n        </button>\r\n\r\n        <section\r\n          className=\"collapse\"\r\n          id=\"senatorRace\"\r\n        >\r\n\r\n        {electionsData.contests.map((contest, key) => {\r\n\r\n          return <section\r\n            className=\"raceCandidates card mb-2\"\r\n            key={key}\r\n          >\r\n\r\n            <section\r\n              className=\"card-header\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target={`#${String.fromCharCode(key+65)}`}\r\n              aria-expanded=\"false\"\r\n              aria-controls={`#${String.fromCharCode(key+65)}`}\r\n            >\r\n              <h5 className=\"card-title\">{contest.office}</h5>\r\n              <p className=\"card-subtitle\">click to expand</p>\r\n            </section>\r\n\r\n            <ul\r\n              className=\"collapse\"\r\n              id={`${String.fromCharCode(key+65)}`}\r\n            >\r\n\r\n              {contest.candidates.map((candidate, key) => {\r\n\r\n                return <li key={key}>\r\n\r\n                  <section className=\"card\">\r\n                    <section className=\"card-body\">\r\n                      <h5 className=\"card-title\">{candidate.name}</h5>\r\n                      <h6 className=\"card-subtitle mb-2 text-muted\">{candidate.party}</h6>\r\n                      <a\r\n                        href={candidate.candidateUrl}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"card-link\"\r\n                      >\r\n                        Website\r\n                      </a>\r\n                    </section>\r\n                  </section>\r\n\r\n                </li>\r\n\r\n              })}\r\n\r\n            </ul>\r\n\r\n          </section>\r\n\r\n          })}\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserAddress;\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport apikey from './secrets';\nimport AddressForm from './AddressForm';\nimport UserAddress from './UserAddress';\nimport VoterInformation from './VoterInformation';\nimport Race from './Race';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      electionsData: null,\n      electionsDataRecieved: null,\n      electionsUrl: `https://www.googleapis.com/civicinfo/v2/elections?key=${apikey}`,\n      street1: undefined,\n      street2: undefined,\n      city: undefined,\n      state: undefined,\n      country: undefined\n\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchElectionsData();\n  }\n\n  fetchElectionsData = () => {\n\n    const {street1, city, state} = this.state;\n    let voterInfoUrl = `https://www.googleapis.com/civicinfo/v2/voterinfo?key=${apikey}&address=${street1}.${city} ${state}&electionId=2000`;\n\n    fetch(voterInfoUrl)\n      .then(res => res.json())\n      .then((electionsData) => {\n        this.setState({\n          electionsDataRecieved: true,\n          electionsData: electionsData\n        })\n      })\n      .then(() => console.log(this.state.electionsData))\n      .catch(error => console.log(error))\n\n  }\n\n  componentDidMount() {\n    console.log(\"loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electionsData,\n      electionsDataRecieved\n    } = this.state;\n\n    return (\n\n      <section className=\"app\">\n\n        <header role=\"heading\">\n          <h1 className=\"text-primary\">VoteInfo</h1>\n        </header>\n\n        <main role=\"Main\">\n\n          <AddressForm\n            handleInputChange={this.handleInputChange}\n            handleSubmit={this.handleSubmit}\n          />\n\n          { electionsDataRecieved ?\n\n            <section className=\"card\">\n\n              <UserAddress\n                electionsData={electionsData}\n              />\n\n              <VoterInformation\n                electionsData={electionsData}\n              />\n\n              <Race\n                electionsData={electionsData}\n              />\n\n            </section>\n\n          : null }\n\n        </main>\n\n        <footer>\n          <h3 className=\"text-secondary\">Footer</h3>\n        </footer>\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}