{"version":3,"sources":["secrets.js","AddressForm.js","UserAddress.js","VoterInformation.js","OfficeRaces.js","Referendum.js","ElectedRepresentatives/FederalRepresentatives.js","ElectedRepresentatives/StateRepresentatives.js","ElectedRepresentatives/LocalRepresentatives.js","ElectedRepresentatives/index.js","App.js","serviceWorker.js","index.js"],"names":["apikey","AddressForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","_this$props","handleInputChange","handleSubmit","react_default","a","createElement","className","htmlFor","type","name","aria-describedby","aria-label","placeholder","onChange","id","onClick","Component","UserAddress","votingData","normalizedInput","line1","line2","city","zip","VoterInformation","href","electionAdministrationBody","ballotInfoUrl","target","rel","electionInfoUrl","votingLocationFinderUrl","correspondenceAddress","OfficeRaces","Fragment","data-toggle","data-target","aria-expanded","aria-controls","contests","map","contest","key","candidates","concat","String","fromCharCode","office","candidate","party","candidateUrl","Referendum","votingDataArray","some","referendumTitle","referendumSubtitle","referendumUrl","FederalRepresentatives","electedRepresentativesData","offices","filter","levels","officialIndices","officialIndex","officials","photoUrl","src","alt","urls","StateRepresentatives","LocalRepresentatives","ElectedRepresentatives","ElectedRepresentatives_FederalRepresentatives","ElectedRepresentatives_StateRepresentatives","ElectedRepresentatives_LocalRepresentatives","App","e","setState","defineProperty","value","preventDefault","fetchElectionData","fetchElectedRepresentativesData","fetchVoterData","prevState","addressSubmitted","_this$state","street1","fetch","then","res","json","electionsData","electionsDataRecieved","catch","error","_this$state2","electedRepresentativesDataRecieved","_this$state3","votingUrl","values","votingDataRecieved","undefined","street2","country","_this$state4","role","src_UserAddress","src_AddressForm","src_VoterInformation","src_ElectedRepresentatives","src_OfficeRaces","src_Referendum","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9c9c0503.chunk.js","sourcesContent":["export const apikey = \"AIzaSyCkDlxMPNJiNVXbqkcLJQ3mQSF8UKfrt8M\"\r\n\r\nexport default apikey;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddressForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"address form loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      handleInputChange,\r\n      handleSubmit\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card addressForm\">\r\n\r\n        <h2 className=\"card-title\">Enter your address:</h2>\r\n\r\n        <form>\r\n\r\n          <section className=\"form-group\">\r\n            <label htmlFor=\"street1\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"street1\"\r\n              aria-describedby=\"street1Help\"\r\n              aria-label=\"street1\"\r\n              placeholder=\"Street Address\"\r\n              onChange={handleInputChange}\r\n            >\r\n            </input>\r\n            <small\r\n              id=\"street1Help\"\r\n              className=\"form-text text-muted\"\r\n            >\r\n              <em>ex. 1600 Pennsylvania Ave NW</em>\r\n            </small>\r\n          </section>\r\n\r\n          <section className=\"form-group\">\r\n            <label htmlFor=\"street2\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"street2\"\r\n              aria-describedby=\"street2Help\"\r\n              aria-label=\"street2\"\r\n              placeholder=\"Street Address cont.\"\r\n              onChange={handleInputChange}\r\n            >\r\n            </input>\r\n            <small\r\n              id=\"street2Help\"\r\n              className=\"form-text text-muted\"\r\n            >\r\n              <em>ex. Apt. 231</em>\r\n            </small>\r\n          </section>\r\n\r\n          <section className=\"form-group\">\r\n            <label htmlFor=\"city\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"city\"\r\n              aria-describedby=\"cityHelp\"\r\n              aria-label=\"city\"\r\n              placeholder=\"City\"\r\n              onChange={handleInputChange}\r\n            >\r\n            </input>\r\n            <small\r\n              id=\"cityHelp\"\r\n              className=\"form-text text-muted\"\r\n            >\r\n              <em>ex. Washington</em>\r\n            </small>\r\n          </section>\r\n\r\n          <section className=\"form-group\">\r\n            <label htmlFor=\"state\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"state\"\r\n              aria-describedby=\"stateHelp\"\r\n              aria-label=\"state\"\r\n              placeholder=\"State\"\r\n              onChange={handleInputChange}\r\n            >\r\n            </input>\r\n            <small\r\n              id=\"stateHelp\"\r\n              className=\"form-text text-muted\"\r\n            >\r\n              <em>ex. DC</em>\r\n            </small>\r\n          </section>\r\n\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Submit\r\n          </button>\r\n\r\n        </form>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddressForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass UserAddress extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"user address loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      votingData\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card userAddress\">\r\n\r\n        <section className=\"card-body\">\r\n\r\n          <h4 className=\"card-title p-2\">Voter registration address: </h4>\r\n\r\n          <ul className=\"list-group list-group-flush pt-3 pb-4\">\r\n            <li className=\"card-text\">{votingData.normalizedInput.line1}</li>\r\n            { votingData.normalizedInput.line2 ?\r\n              <li className=\"card-text\">{votingData.normalizedInput.line2}</li>\r\n            : null }\r\n            <li className=\"card-text\">{votingData.normalizedInput.city}</li>\r\n            <li className=\"card-text\">{votingData.normalizedInput.state}</li>\r\n            <li className=\"card-text\">{votingData.normalizedInput.zip}</li>\r\n          </ul>\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserAddress;\r\n","import React, { Component } from 'react';\r\n\r\nclass VoterInformation extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"voter information loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      votingData\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card voterInformation\">\r\n\r\n        <section className=\"card-body\">\r\n\r\n          <h4 className=\"card-title p-2\">Voter Information</h4>\r\n\r\n          <ul>\r\n\r\n            <li className=\"my-3\">\r\n              <a\r\n                href={votingData.state[0].electionAdministrationBody.ballotInfoUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                  Current Ballot\r\n                </button>\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"my-3\">\r\n              <a\r\n                href={votingData.state[0].electionAdministrationBody.electionInfoUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\">\r\n                  <button type=\"button\" className=\"btn btn-primary\">\r\n                    Election Info\r\n                  </button>\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"my-3\">\r\n              <a\r\n                href={votingData.state[0].electionAdministrationBody.votingLocationFinderUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\">\r\n                  <button type=\"button\" className=\"btn btn-primary\">\r\n                    Voting Location Info\r\n                  </button>\r\n              </a>\r\n            </li>\r\n\r\n          </ul>\r\n\r\n          <section className=\"card mt-5\">\r\n            <section className=\"card-body\">\r\n              <h5 className=\"card-title mb-3\">Election Authority Address</h5>\r\n              <p className=\"card-text\"><b>{votingData.state[0].electionAdministrationBody.name}</b></p>\r\n              <p className=\"card-text\">{votingData.state[0].electionAdministrationBody.correspondenceAddress.line1},</p>\r\n              <p className=\"card-text\">\r\n                {votingData.state[0].electionAdministrationBody.correspondenceAddress.city}, {votingData.state[0].electionAdministrationBody.correspondenceAddress.state}  {votingData.state[0].electionAdministrationBody.correspondenceAddress.zip}\r\n              </p>\r\n            </section>\r\n          </section>\r\n\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default VoterInformation;\r\n","import React, { Component } from 'react';\r\n\r\nclass OfficeRaces extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"race loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      votingData\r\n    } = this.props;\r\n\r\n    return (\r\n      \r\n      <React.Fragment>\r\n      \r\n        <h4 className=\"mt-3 mb-1\">Upcoming Races</h4>\r\n  \r\n        <section className=\"card text-center my-5\">\r\n  \r\n          <button\r\n            className=\"py-3\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#officeRaces\"\r\n            aria-expanded=\"true\"\r\n            aria-controls=\"#officeRaces\"\r\n          >\r\n            Candidate Races for Office\r\n          </button>\r\n  \r\n          <section\r\n            className=\"collapse\"\r\n            id=\"officeRaces\"\r\n          >\r\n  \r\n          {votingData ?\r\n          \r\n            votingData.contests.map((contest, key) => {\r\n            \r\n            if(contest.candidates) {\r\n    \r\n              return <section\r\n                className=\"raceCandidates card mb-2\"\r\n                key={key}\r\n              >\r\n    \r\n                <section\r\n                  className=\"card-header\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target={`#${String.fromCharCode(key+65)}`}\r\n                  aria-expanded=\"false\"\r\n                  aria-controls={`#${String.fromCharCode(key+65)}`}\r\n                >\r\n                  <h5 className=\"card-title\">{contest.office}</h5>\r\n                  <p className=\"card-subtitle\">click to expand</p>\r\n                </section>\r\n    \r\n                <ul\r\n                  className=\"collapse\"\r\n                  id={`${String.fromCharCode(key+65)}`}\r\n                >\r\n    \r\n                  {contest.candidates.map((candidate, key) => {\r\n    \r\n                    return <li key={key}>\r\n    \r\n                      <section className=\"card\">\r\n                        <section className=\"card-body\">\r\n                          <h5 className=\"card-title\">{candidate.name}</h5>\r\n                          <h6 className=\"card-subtitle mb-2 text-muted\">{candidate.party}</h6>\r\n                          <a\r\n                            href={candidate.candidateUrl}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"card-link\"\r\n                          >\r\n                            Website\r\n                          </a>\r\n                        </section>\r\n                      </section>\r\n    \r\n                    </li>;\r\n    \r\n                  })}\r\n    \r\n                </ul>\r\n    \r\n              </section>;\r\n              \r\n            } else {\r\n              return null;\r\n            }\r\n    \r\n              }) \r\n            \r\n            :null }\r\n  \r\n          </section>\r\n  \r\n        </section>\r\n        \r\n      </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default OfficeRaces;\r\n","import React, { Component } from 'react';\r\n\r\nclass Referendum extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"ballots loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      votingData,\r\n      votingDataArray\r\n    } = this.props;\r\n\r\n    return (\r\n      \r\n      <React.Fragment>\r\n      \r\n        <h4 className=\"mt-3 mb-1\">Upcoming Referendum</h4>\r\n  \r\n        <section className=\"card text-center my-5\">\r\n        \r\n          { votingDataArray[3].some(contest => contest.type === \"Referendum\") ?\r\n          \r\n            votingData.contests.map((contest, key) => {\r\n            \r\n              if(contest.type === \"Referendum\") {\r\n      \r\n                return <section\r\n                  className=\"card mb-2\"\r\n                  key={key}\r\n                >\r\n                  <section className=\"card-header\">\r\n                    <h5 className=\"card-title py-1\">{contest.referendumTitle}</h5>\r\n                    <h6 className=\"card-subtitle py-1\">{contest.referendumSubtitle}</h6>\r\n                  </section>\r\n                  \r\n                  <section className=\"card-body\">\r\n                    \r\n                    <p className=\"card-text py-1\">\r\n                      <a \r\n                        href={contest.referendumUrl}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        Referendum Link\r\n                      </a>\r\n                    </p>\r\n                  </section>\r\n  \r\n                </section>;\r\n      \r\n              } else {\r\n              \r\n                return null;\r\n                \r\n              }\r\n    \r\n            }) \r\n            \r\n          : <p className=\"card-text my-auto py-2\">No upcoming Referendum</p> }\r\n  \r\n          </section>\r\n  \r\n      </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Referendum;\r\n","import React, { Component } from 'react';\r\n\r\nclass FederalRepresentatives extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"federal representatives loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      electedRepresentativesData,\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card federalRepresentatives\">\r\n\r\n        <section className=\"card-body\">\r\n\r\n          <h4 className=\"card-title p-2\">Federal Representatives</h4>\r\n\r\n          <section className=\"card text-center\">\r\n\r\n            <button\r\n              className=\"py-3\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#federalRepresentatives\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"#federalRepresentatives\"\r\n            >\r\n              Federal Representatives\r\n            </button>\r\n\r\n            <section\r\n              className=\"collapse\"\r\n              id=\"federalRepresentatives\"\r\n            >\r\n\r\n            {electedRepresentativesData ?\r\n\r\n              electedRepresentativesData.offices\r\n                .filter(office => office.levels)\r\n                .filter(office => office.levels[0] === \"country\")\r\n                .map((office, key) => {\r\n\r\n                return <section\r\n                  className=\"card mb-2\"\r\n                  key={office.name}\r\n                >\r\n\r\n                  <section\r\n                    className=\"card-header\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target={`#${office.name}`}\r\n                    aria-expanded=\"false\"\r\n                    aria-controls={`#${office.name}`}\r\n                  >\r\n                    <h5 className=\"card-title\">{office.name}</h5>\r\n                    <p className=\"card-subtitle\">click to expand</p>\r\n                  </section>\r\n\r\n                  <ul\r\n                    className=\"collapse\"\r\n                    id={`${office.name}`}\r\n                  >\r\n\r\n                  {office.officialIndices.map((officialIndex, key) => {\r\n\r\n                    return <li key={key}>\r\n\r\n                      <section className=\"card\">\r\n                        <section className=\"card-header\">\r\n                         { electedRepresentativesData.officials[officialIndex].photoUrl ?\r\n                            <figure>\r\n                              <img\r\n                                className=\"card-img-top\"\r\n                                src={electedRepresentativesData.officials[officialIndex].photoUrl}\r\n                                alt={electedRepresentativesData.officials[officialIndex].name}\r\n                              ></img>\r\n                            </figure>\r\n                          : null }\r\n                        </section>\r\n                        <section className=\"card-body\">\r\n                          <h5 className=\"card-title\">\r\n                            {electedRepresentativesData.officials[officialIndex].name}\r\n                          </h5>\r\n                          <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                            {electedRepresentativesData.officials[officialIndex].party}\r\n                          </h6>\r\n                          <a\r\n                            href={electedRepresentativesData.officials[officialIndex].urls}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"card-link\"\r\n                          >\r\n                            Website\r\n                          </a>\r\n                        </section>\r\n                      </section>\r\n\r\n                    </li>;\r\n\r\n                  })}\r\n\r\n                  </ul>\r\n\r\n                </section>;\r\n\r\n                })\r\n\r\n              :null }\r\n\r\n            </section>\r\n\r\n          </section>\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default FederalRepresentatives;\r\n","import React, { Component } from 'react';\r\n\r\nclass StateRepresentatives extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"state representatives loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      electedRepresentativesData,\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card stateRepresentatives\">\r\n\r\n        <section className=\"card-body\">\r\n\r\n          <h4 className=\"card-title p-2\">State Representatives</h4>\r\n\r\n          <section className=\"card text-center\">\r\n\r\n            <button\r\n              className=\"py-3\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#stateRepresentatives\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"#stateRepresentatives\"\r\n            >\r\n              State Representatives\r\n            </button>\r\n\r\n            <section\r\n              className=\"collapse\"\r\n              id=\"stateRepresentatives\"\r\n            >\r\n\r\n            {electedRepresentativesData ?\r\n\r\n              electedRepresentativesData.offices\r\n                .filter(office => office.levels)\r\n                .filter(office => office.levels[0] === \"administrativeArea1\")\r\n                .map((office, key) => {\r\n\r\n                return <section\r\n                  className=\"card mb-2\"\r\n                  key={office.name}\r\n                >\r\n\r\n                  <section\r\n                    className=\"card-header\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target={`#${office.name}`}\r\n                    aria-expanded=\"false\"\r\n                    aria-controls={`#${office.name}`}\r\n                  >\r\n                    <h5 className=\"card-title\">{office.name}</h5>\r\n                    <p className=\"card-subtitle\">click to expand</p>\r\n                  </section>\r\n\r\n                  <ul\r\n                    className=\"collapse\"\r\n                    id={`${office.name}`}\r\n                  >\r\n\r\n                  {office.officialIndices.map((officialIndex, key) => {\r\n\r\n                    return <li key={key}>\r\n\r\n                      <section className=\"card\">\r\n                        <section className=\"card-header\">\r\n                          { electedRepresentativesData.officials[officialIndex].photoUrl ?\r\n                            <figure>\r\n                              <img\r\n                                className=\"card-img-top\"\r\n                                src={electedRepresentativesData.officials[officialIndex].photoUrl}\r\n                                alt={electedRepresentativesData.officials[officialIndex].name}\r\n                              ></img>\r\n                            </figure>\r\n                          : null }\r\n                        </section>\r\n                        <section className=\"card-body\">\r\n                          <h5 className=\"card-title\">\r\n                            {electedRepresentativesData.officials[officialIndex].name}\r\n                          </h5>\r\n                          <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                            {electedRepresentativesData.officials[officialIndex].party}\r\n                          </h6>\r\n                          <a\r\n                            href={electedRepresentativesData.officials[officialIndex].urls}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"card-link\"\r\n                          >\r\n                            Website\r\n                          </a>\r\n                        </section>\r\n                      </section>\r\n\r\n                    </li>;\r\n\r\n                  })}\r\n\r\n                  </ul>\r\n\r\n                </section>;\r\n\r\n                })\r\n\r\n              :null }\r\n\r\n            </section>\r\n\r\n          </section>\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateRepresentatives;\r\n","import React, { Component } from 'react';\r\n\r\nclass LocalRepresentatives extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"local representatives loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      electedRepresentativesData,\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card localRepresentatives\">\r\n\r\n        <section className=\"card-body\">\r\n\r\n          <h4 className=\"card-title p-2\">Local Representatives</h4>\r\n\r\n          <section className=\"card text-center\">\r\n\r\n            <button\r\n              className=\"py-3\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#localRepresentatives\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"#localRepresentatives\"\r\n            >\r\n              Local Representatives\r\n            </button>\r\n\r\n            <section\r\n              className=\"collapse\"\r\n              id=\"localRepresentatives\"\r\n            >\r\n\r\n            {electedRepresentativesData ?\r\n\r\n              electedRepresentativesData.offices\r\n                .filter(office => !office.levels)\r\n                .map((office, key) => {\r\n\r\n                return <section\r\n                  className=\"card mb-2\"\r\n                  key={office.name}\r\n                >\r\n\r\n                  <section\r\n                    className=\"card-header\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target={`#${office.name}`}\r\n                    aria-expanded=\"false\"\r\n                    aria-controls={`#${office.name}`}\r\n                  >\r\n                    <h5 className=\"card-title\">{office.name}</h5>\r\n                    <p className=\"card-subtitle\">click to expand</p>\r\n                  </section>\r\n\r\n                  <ul\r\n                    className=\"collapse\"\r\n                    id={`${office.name}`}\r\n                  >\r\n\r\n                  {office.officialIndices.map((officialIndex, key) => {\r\n\r\n                    return <li key={key}>\r\n\r\n                      <section className=\"card\">\r\n                        <section className=\"card-header\">\r\n                          { electedRepresentativesData.officials[officialIndex].photoUrl ?\r\n                            <figure>\r\n                              <img\r\n                                className=\"card-img-top\"\r\n                                src={electedRepresentativesData.officials[officialIndex].photoUrl}\r\n                                alt={electedRepresentativesData.officials[officialIndex].name}\r\n                              ></img>\r\n                            </figure>\r\n                          : null}\r\n                        </section>\r\n                        <section className=\"card-body\">\r\n                          <h5 className=\"card-title\">\r\n                            {electedRepresentativesData.officials[officialIndex].name}\r\n                          </h5>\r\n                          <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                            {electedRepresentativesData.officials[officialIndex].party}\r\n                          </h6>\r\n                          <a\r\n                            href={electedRepresentativesData.officials[officialIndex].urls}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"card-link\"\r\n                          >\r\n                            Website\r\n                          </a>\r\n                        </section>\r\n                      </section>\r\n\r\n                    </li>;\r\n\r\n                  })}\r\n\r\n                  </ul>\r\n\r\n                </section>;\r\n\r\n                })\r\n\r\n              :null }\r\n\r\n            </section>\r\n\r\n          </section>\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocalRepresentatives;\r\n","import React, { Component } from 'react';\r\nimport FederalRepresentatives from './FederalRepresentatives';\r\nimport StateRepresentatives from './StateRepresentatives';\r\nimport LocalRepresentatives from './LocalRepresentatives';\r\n\r\nclass ElectedRepresentatives extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"elected representatives loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      electedRepresentativesData,\r\n    } = this.props;\r\n\r\n    return (\r\n\r\n      <section className=\"card electedRepresentatives\">\r\n\r\n        <section className=\"card-body\">\r\n\r\n          <h4 className=\"card-title p-2\">Elected Representatives</h4>\r\n\r\n          <section className=\"card text-center\">\r\n\r\n            <button\r\n              className=\"py-3\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#electedRepresentatives\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"#electedRepresentatives\"\r\n            >\r\n              Current Representatives\r\n            </button>\r\n\r\n            <section\r\n              className=\"collapse\"\r\n              id=\"electedRepresentatives\"\r\n            >\r\n\r\n            { electedRepresentativesData ?\r\n\r\n            <section>\r\n\r\n              <FederalRepresentatives\r\n                electedRepresentativesData={electedRepresentativesData}\r\n              />\r\n\r\n              <StateRepresentatives\r\n                electedRepresentativesData={electedRepresentativesData}\r\n              />\r\n              \r\n              <LocalRepresentatives\r\n                electedRepresentativesData={electedRepresentativesData}\r\n              />\r\n\r\n            </section>\r\n\r\n            : null }\r\n\r\n            </section>\r\n\r\n          </section>\r\n\r\n        </section>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ElectedRepresentatives;\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport apikey from './secrets';\r\nimport AddressForm from './AddressForm';\r\nimport UserAddress from './UserAddress';\r\nimport VoterInformation from './VoterInformation';\r\nimport OfficeRaces from './OfficeRaces';\r\nimport Referendum from './Referendum';\r\nimport ElectedRepresentatives from './ElectedRepresentatives';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      addressSubmitted: false,\r\n      electionsData: null,\r\n      electionsDataRecieved: false,\r\n      electedRepresentativesData: null,\r\n      electedRepresentativesDataRecieved: false,\r\n      street1: undefined,\r\n      street2: undefined,\r\n      city: undefined,\r\n      state: undefined,\r\n      country: undefined,\r\n      votingData: null,\r\n      votingDataArray: null,\r\n      votingDataRecieved: false\r\n\r\n    }\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.fetchElectionData();\r\n    this.fetchElectedRepresentativesData();\r\n    this.fetchVoterData();\r\n    this.setState(prevState => ({\r\n      addressSubmitted: !this.state.addressSubmitted\r\n    }))\r\n  }\r\n\r\n  fetchElectionData = () => {\r\n\r\n    const {street1, city, state} = this.state;\r\n\r\n    fetch(`https://www.googleapis.com/civicinfo/v2/elections?key=${apikey}&address=${street1}.${city} ${state}`)\r\n      .then(res => res.json())\r\n      .then(electionsData => {\r\n        this.setState({\r\n          electionsData: electionsData,\r\n          electionsDataRecieved: true\r\n        });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  fetchElectedRepresentativesData = () => {\r\n\r\n    const {street1, city, state} = this.state;\r\n\r\n    fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=${apikey}&address=${street1}.${city} ${state}`)\r\n      .then(res => res.json())\r\n      .then(electedRepresentativesData => {\r\n        this.setState({\r\n          electedRepresentativesData: electedRepresentativesData,\r\n          electedRepresentativesDataRecieved: true\r\n        });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  fetchVoterData = () => {\r\n\r\n    const {street1, city, state} = this.state;\r\n    let votingUrl = `https://www.googleapis.com/civicinfo/v2/voterinfo?key=${apikey}&address=${street1}.${city} ${state}&electionId=2000`;\r\n\r\n    fetch(votingUrl)\r\n      .then(res => res.json())\r\n      .then((votingData) => {\r\n        this.setState({\r\n          votingData: votingData,\r\n          votingDataArray: Object.values(votingData),\r\n          votingDataRecieved: true\r\n        });\r\n      })\r\n      .catch(error => console.log(error));\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"App loaded\");\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      addressSubmitted,\r\n      electedRepresentativesData,\r\n      electedRepresentativesDataRecieved,\r\n      votingData,\r\n      votingDataArray,\r\n      votingDataRecieved\r\n    } = this.state;\r\n\r\n    return (\r\n\r\n      <section className=\"app\">\r\n\r\n        <header role=\"banner\" aria-label=\"header\">\r\n          <h1 className=\"text-primary display-4 my-2\">VoteInfo</h1>\r\n        </header>\r\n\r\n        <main role=\"main\" aria-label=\"main\">\r\n\r\n          { votingDataRecieved && addressSubmitted ?\r\n            <UserAddress\r\n              votingData={votingData}\r\n            />\r\n          : <AddressForm\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                    />\r\n          }\r\n\r\n\r\n          { votingDataRecieved ?\r\n\r\n            <section className=\"card\">\r\n\r\n              <section className=\"votingInformation\">\r\n\r\n                <VoterInformation\r\n                  votingData={votingData}\r\n                />\r\n\r\n                <ElectedRepresentatives\r\n                  electedRepresentativesData={electedRepresentativesData}\r\n                  electedRepresentativesDataRecieved={electedRepresentativesDataRecieved}\r\n                />\r\n\r\n              </section>\r\n\r\n              <section className=\"electionsInformation mx-auto\">\r\n\r\n                <OfficeRaces\r\n                  votingData={votingData}\r\n                />\r\n\r\n                <Referendum\r\n                  votingData={votingData}\r\n                  votingDataArray={votingDataArray}\r\n                />\r\n\r\n              </section>\r\n\r\n            </section>\r\n\r\n          :\r\n\r\n            <section className=\"informationPlaceholder card text-muted\">\r\n\r\n              <h4 className=\"card-title\">Please enter your address in the form</h4>\r\n              <p className=\"card-text\">Your voting and election information will appear here</p>\r\n\r\n            </section>\r\n\r\n          }\r\n\r\n        </main>\r\n\r\n        <footer>\r\n          <h3 className=\"text-secondary\">VoteInfo 2019</h3>\r\n        </footer>\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}