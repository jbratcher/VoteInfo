{"version":3,"sources":["secrets.js","components/Header/index.js","components/Footer/index.js","components/VoterAddresses/ElectionAuthorityAddress.js","components/VoterAddresses/UserAddress.js","components/VoterAddresses/AddressForm.js","components/VoterAddresses/index.js","components/VoterInformation/VoteInfoButtons.js","components/VoterInformation/index.js","components/Elections/OfficeRaces.js","components/Elections/Referendum.js","components/Elections/index.js","components/ElectedRepresentatives/FederalRepresentatives.js","components/ElectedRepresentatives/StateRepresentatives.js","components/ElectedRepresentatives/LocalRepresentatives.js","components/ElectedRepresentatives/index.js","App.js","serviceWorker.js","index.js"],"names":["apikey","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","react_default","a","createElement","role","aria-label","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-haspopup","aria-labelledby","Component","Footer","target","rel","ElectionAuthorityAddress","votingData","electionAdministrationBody","name","correspondenceAddress","line1","city","zip","UserAddress","_this$props","addressReset","normalizedInput","line2","class","onClick","VoterAddresses_ElectionAuthorityAddress","AddressForm","handleInputChange","handleSubmit","htmlFor","aria-describedby","placeholder","onChange","VoterAddresses","addressSubmitted","votingDataRecieved","Fragment","VoterAddresses_UserAddress","VoterAddresses_AddressForm","VoteInfoButtons","ballotInfoUrl","electionInfoUrl","votingLocationFinderUrl","VoterInformation","VoterInformation_VoteInfoButtons","OfficeRaces","contests","map","contest","key","candidates","hidden","office","concat","candidate","party","candidateUrl","Referendum","votingDataArray","some","referendumTitle","referendumSubtitle","referendumUrl","Elections","Elections_OfficeRaces","Elections_Referendum","FederalRepresentatives","electedRepresentativesData","offices","filter","levels","officialIndices","officialIndex","officials","photoUrl","src","alt","urls","StateRepresentatives","LocalRepresentatives","ElectedRepresentatives","ElectedRepresentatives_FederalRepresentatives","ElectedRepresentatives_StateRepresentatives","ElectedRepresentatives_LocalRepresentatives","App","setState","street1","street2","country","e","defineProperty","value","preventDefault","fetchElectionData","fetchElectedRepresentativesData","fetchVoterData","prevState","_this$state","fetch","then","res","json","electionsData","electionsDataRecieved","catch","error","_this$state2","electedRepresentativesDataRecieved","_this$state3","votingUrl","values","undefined","_this$state4","components_Header","components_VoterAddresses","components_VoterInformation","components_ElectedRepresentatives","components_Elections","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.06117dfc.chunk.js","sourcesContent":["export const apikey = \"AIzaSyAGNAWHYmzPtl9h2vVMmLBhlD5o3Et1NCw\";\n\nexport default apikey;","import React, { Component } from 'react';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    console.log(\"Header loaded\");\n  }\n\n\n  render() {\n\n    return (\n\n        <header role=\"banner\" aria-label=\"header\">\n    \n          <nav className=\"navbar navbar-expand-lg navbar-light\">\n          \n            <a className=\"navbar-brand\" id=\"brand\" href=\"#top\">\n              <h1>VoteInfo</h1>\n            </a>\n            \n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainNav\" aria-controls=\"mainNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n          \n            <div className=\"collapse navbar-collapse\" id=\"mainNav\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\" href=\"#top\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#top\">Link</a>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <a className=\"nav-link dropdown-toggle\" href=\"#top\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown\n                  </a>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Action</a>\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Another action</a>\n                    <div className=\"dropdown-divider\"></div>\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Something else here</a>\n                  </div>\n                </li>\n              </ul>\n            </div>\n            \n          </nav>\n    \n        </header>\n\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    console.log(\"Footer loaded\");\n  }\n\n\n  render() {\n\n    return (\n\n        <footer role=\"contentinfo\" aria-label=\"footer\">\n\n          <section className=\"subfooter py-3\">\n            <ul className=\"nav justify-content-center\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://developers.google.com/civic-information/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Google Civic Information API\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://www.votinginfoproject.org/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Voting Information Project (VIP)\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://ballotpedia.org/Main_Page\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Ballotpedia\n                </a>\n              </li>\n            </ul>\n          </section>\n\n          <h3 className=\"text-secondary py-3\">VoteInfo 2019</h3>\n\n        </footer>\n\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass ElectionAuthorityAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Election Authority Address loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"electionAuthorityAddress\">\n      \n        <section>\n          <h5>Election Authority Address</h5>\n          <p><b>{votingData.state[0].electionAdministrationBody.name}</b></p>\n          <p>{votingData.state[0].electionAdministrationBody.correspondenceAddress.line1},</p>\n          <p>\n            {votingData.state[0].electionAdministrationBody.correspondenceAddress.city}, {votingData.state[0].electionAdministrationBody.correspondenceAddress.state}  {votingData.state[0].electionAdministrationBody.correspondenceAddress.zip}\n          </p>\n        </section>\n        \n      </section>\n\n    );\n  }\n}\n\nexport default ElectionAuthorityAddress;\n","import React, { Component } from 'react';\nimport ElectionAuthorityAddress from './ElectionAuthorityAddress';\n\nclass UserAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"user address loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressReset,\n      votingData\n    } = this.props;\n\n    return (\n      \n      <section className=\"card registrationAddress\">\n\n        <section className=\"card-body\">\n        \n          <section className=\"userAddress\">\n\n            <h4 className=\"card-title\">Your registration address: </h4>\n  \n            <ul className=\"list-group list-group-flush\">\n              <li className=\"card-text\">{votingData.normalizedInput.line1}</li>\n              { votingData.normalizedInput.line2 ?\n                <li className=\"card-text\">{votingData.normalizedInput.line2}</li>\n              : null }\n              <li className=\"card-text\">{votingData.normalizedInput.city}</li>\n              <li className=\"card-text\">{votingData.normalizedInput.state}</li>\n              <li className=\"card-text\">{votingData.normalizedInput.zip}</li>\n            </ul>\n          \n          </section>\n\n          <section class=\"changeAddress\">\n            <button \n              className=\"btn btn-outline-secondary\"\n              onClick={addressReset}\n              type=\"button\"\n            >\n              Change Address\n            </button>\n          </section>\n  \n\n          <ElectionAuthorityAddress \n            votingData={votingData}\n          />\n        \n        </section>\n\n      </section>\n        \n    );\n  }\n}\n\nexport default UserAddress;\n","import React, { Component } from 'react';\n\nclass AddressForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n\n  }\n\n  componentDidMount() {\n    console.log(\"address form loaded\");\n  }\n\n\n  render() {\n\n    const {\n      handleInputChange,\n      handleSubmit\n    } = this.props;\n\n    return (\n\n      <section className=\"card addressForm\">\n\n        <h2 className=\"card-title\">Your address:</h2>\n\n        <form>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street1\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street1\"\n              aria-describedby=\"street1Help\"\n              aria-label=\"street1\"\n              placeholder=\"Street Address\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street1Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. 1600 Pennsylvania Ave NW</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street2\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street2\"\n              aria-describedby=\"street2Help\"\n              aria-label=\"street2\"\n              placeholder=\"Street Address cont.\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street2Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Apt. 231</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"city\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"city\"\n              aria-describedby=\"cityHelp\"\n              aria-label=\"city\"\n              placeholder=\"City\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"cityHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Washington</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"state\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"state\"\n              aria-describedby=\"stateHelp\"\n              aria-label=\"state\"\n              placeholder=\"State\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"stateHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. DC</em>\n            </small>\n          </section>\n\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n\n        </form>\n\n      </section>\n\n    );\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\nimport UserAddress from './UserAddress';\nimport AddressForm from './AddressForm';\n\nclass VoterAddresses extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Voter Information loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressReset,\n      addressSubmitted,\n      handleInputChange,\n      handleSubmit,\n      votingData,\n      votingDataRecieved\n    } = this.props;\n\n    return (\n      \n      <React.Fragment>\n\n        { votingDataRecieved && addressSubmitted ?\n          <UserAddress\n            addressReset={addressReset}\n            votingData={votingData}\n          />\n        : <AddressForm\n                  handleInputChange={handleInputChange}\n                  handleSubmit={handleSubmit}\n                  />\n        }\n          \n      </React.Fragment>\n          \n    );\n  }\n}\n\nexport default VoterAddresses;\n","import React, { Component } from 'react';\n\nclass VoteInfoButtons extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Vote Info Buttons loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card-body voteInfoButtons\">\n\n        <h4 className=\"card-title\" >Voter Information</h4>\n\n        <ul>\n\n          <li>\n            <a\n              href={votingData.state[0].electionAdministrationBody.ballotInfoUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <button type=\"button\" className=\"btn btn-primary\">\n                View Current Ballot\n              </button>\n            </a>\n          </li>\n\n          <li>\n            <a\n              href={votingData.state[0].electionAdministrationBody.electionInfoUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n                <button type=\"button\" className=\"btn btn-primary\">\n                  Find Election Info\n                </button>\n            </a>\n          </li>\n\n          <li>\n            \n            <a\n              href={votingData.state[0].electionAdministrationBody.votingLocationFinderUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n                <button type=\"button\" className=\"btn btn-primary\">\n                  Find Voting Location\n                </button>\n            </a>\n          </li>\n\n        </ul>\n\n      </section>\n\n    );\n  }\n}\n\nexport default VoteInfoButtons;\n","import React, { Component } from 'react';\nimport VoteInfoButtons from './VoteInfoButtons';\n\n\nclass VoterInformation extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Voter Information loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <VoteInfoButtons \n        votingData={votingData}\n      />\n          \n    );\n  }\n}\n\nexport default VoterInformation;\n","import React, { Component } from 'react';\n\nclass OfficeRaces extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"race loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n      \n      <section className=\"card upcomingRacesCard\">\n      \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#upcomingRaces\"\n          aria-expanded=\"true\"\n          aria-controls=\"#upcomingRaces\"\n        >\n          Upcoming Races\n        </button>\n        \n        <section className=\"collapse\" id=\"upcomingRaces\">\n            \n          <section className=\"card text-center officeRaces\">\n    \n            {votingData ?\n            \n              votingData.contests.map((contest, key) => {\n              \n              if(contest.candidates) {\n      \n                return <section\n                  className=\"card raceCandidates\"\n                  key={key}\n                >\n      \n                  <h5 className=\"card-title\" hidden>{contest.office}</h5>\n                  \n                  <button\n                    className=\"btn btn-secondary\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target={`#${contest.office}upcoming`}\n                    aria-expanded=\"true\"\n                    aria-controls={`#${contest.office}upcoming`}\n                  >\n                    {contest.office}\n                  </button>\n        \n                  <section\n                    className=\"collapse\"\n                    id={`${contest.office}upcoming`}\n                  >\n                    \n                    <section className=\"card-body\">\n          \n                      {contest.candidates.map((candidate, key) => {\n        \n                        return <section className=\"card\" key={key}>\n                          <section className=\"card-body\">\n                            <h5 className=\"card-title\">{candidate.name}</h5>\n                            <h6 className=\"card-subtitle text-muted\">{candidate.party}</h6>\n                            <a\n                              href={candidate.candidateUrl}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"card-link\"\n                            >\n                              Website\n                            </a>\n                          </section>\n                        </section>\n        \n                      })}\n                        \n                    </section>\n        \n                  </section>\n      \n                </section>;\n                \n              } else {\n                return null;\n              }\n      \n                }) \n              \n              :null }\n    \n          </section>\n          \n        </section>\n      \n      </section>\n\n    );\n  }\n}\n\nexport default OfficeRaces;\n","import React, { Component } from 'react';\n\nclass Referendum extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"ballots loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData,\n      votingDataArray\n    } = this.props;\n\n    return (\n      \n      <section className=\"card upcomingReferendumCard\">\n      \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#upcomingReferendum\"\n          aria-expanded=\"true\"\n          aria-controls=\"#upcomingReferendum\"\n        >\n          Upcoming Referendum\n        </button>\n        \n        <section className=\"collapse\" id=\"upcomingReferendum\">\n        \n          { votingDataArray[3].some(contest => contest.type === \"Referendum\") ?\n          \n            votingData.contests.map((contest, key) => {\n            \n              if(contest.type === \"Referendum\") {\n      \n                return <section\n                  className=\"card referendum\"\n                  key={key}\n                >\n                \n                  <button\n                    className=\"btn btn-secondary\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target={`#${contest.referendumTitle}upcoming`}\n                    aria-expanded=\"true\"\n                    aria-controls={`#${contest.referendumTitle}upcoming`}\n                  >\n                    {contest.referendumTitle}\n                  </button>\n        \n                  <section\n                    className=\"collapse\"\n                    id={`${contest.referendumTitle}upcoming`}\n                  >\n                \n                    <section className=\"card-body\">\n                  \n                      <h5 className=\"card-title\">{contest.referendumTitle}</h5>\n                      <h6 className=\"card-subtitle\">{contest.referendumSubtitle}</h6>\n  \n                      <p className=\"card-text\">\n                        <a \n                          href={contest.referendumUrl}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Referendum Link\n                        </a>\n                      </p>\n                      \n                    </section>\n                  \n                  </section>\n  \n                </section>;\n      \n              } else {\n              \n                return null;\n                \n              }\n    \n            }) \n            \n          : <p className=\"card-text my-auto\">No upcoming Referendum</p> }\n  \n          </section>\n  \n      </section>\n\n    );\n  }\n}\n\nexport default Referendum;\n","import React, { Component } from 'react';\nimport OfficeRaces from './OfficeRaces';\nimport Referendum from './Referendum';\n\nclass Elections extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"race loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData,\n      votingDataArray\n    } = this.props;\n\n    return (\n      \n      <React.Fragment>\n      \n        <OfficeRaces\n          votingData={votingData}\n        />\n        \n        <Referendum\n          votingData={votingData}\n          votingDataArray={votingDataArray}\n        />\n\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default Elections;","import React, { Component } from 'react';\n\nclass FederalRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"federal representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>Federal Representatives</h4>\n        \n        <section className=\"card federalRepresentativesCard\">\n\n          <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#fedReps\"\n            aria-expanded=\"true\"\n            aria-controls=\"#fedReps\"\n          >\n            Federal Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"fedReps\"\n          >\n          \n            <section className=\"federalRepresentatives card-body text-center\">\n            \n            {electedRepresentativesData ?\n              // get offices that have a level key/value that is \"country\" and iterate\n              electedRepresentativesData.offices\n                .filter(office => office.levels)\n                .filter(office => office.levels[0] === \"country\")\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n  \n                    return <section className=\"card\" key={key}>\n                      \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n  \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                        \n                        <figure>\n                          <img\n                            className=\"card-img-top\"\n                            src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                            alt={electedRepresentativesData.officials[officialIndex].name}\n                          ></img>\n                        </figure>\n                        \n                        : null }\n                    \n                        <h5 className=\"card-title\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n                })\n  \n              :null }\n            \n            </section>\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default FederalRepresentatives;\n","import React, { Component } from 'react';\n\nclass StateRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"state representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>State Representatives</h4>\n        \n        <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#stateReps\"\n            aria-expanded=\"true\"\n            aria-controls=\"#stateReps\"\n          >\n            State Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"stateReps\"\n          >\n        \n            <section className=\"card-body text-center stateRepresentatives\">\n            \n            {electedRepresentativesData ?\n              // get offices that have a level key/value that is \"country\" and iterate\n              electedRepresentativesData.offices\n                .filter(office => office.levels)\n                .filter(office => office.levels[0] === \"administrativeArea1\")\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n                  \n                    return <section className=\"card\" key={key}>\n                    \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n  \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                          <figure>\n                            <img\n                              className=\"card-img-top\"\n                              src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                              alt={electedRepresentativesData.officials[officialIndex].name}\n                            ></img>\n                          </figure>\n                        : null }\n                      \n                        <h5 className=\"card-text\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-text text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                        \n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n              })\n  \n            :null }\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default StateRepresentatives;\n","import React, { Component } from 'react';\n\nclass LocalRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"local representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>Local Representatives</h4>\n          \n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#localReps\"\n          aria-expanded=\"true\"\n          aria-controls=\"#localReps\"\n        >\n          Local Representatives\n        </button>\n\n        <section\n          className=\"collapse\"\n          id=\"localReps\"\n        >\n\n          <section className=\"card-body text-center localRepresentatives\">\n  \n            {electedRepresentativesData ?\n  \n              electedRepresentativesData.offices\n                .filter(office => !office.levels)\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n  \n                    return <section className=\"card\" key={key}>\n                    \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n                        \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                          <figure>\n                            <img\n                              className=\"card-img-top\"\n                              src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                              alt={electedRepresentativesData.officials[officialIndex].name}\n                            ></img>\n                          </figure>\n                        : null}\n                      \n                        <h5 className=\"card-text\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-text mb-2 text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                        \n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n                })\n  \n              :null }\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default LocalRepresentatives;\n","import React, { Component } from 'react';\nimport FederalRepresentatives from './FederalRepresentatives';\nimport StateRepresentatives from './StateRepresentatives';\nimport LocalRepresentatives from './LocalRepresentatives';\n\nclass ElectedRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"elected representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card electedRepresentatives\">\n\n        <h4 className=\"card-title\" hidden>Elected Representatives</h4>\n\n        <section className=\"card representativesCard\">\n\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#electedRepresentatives\"\n            aria-expanded=\"true\"\n            aria-controls=\"#electedRepresentatives\"\n          >\n            Your Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"electedRepresentatives\"\n          >\n\n          { electedRepresentativesData ?\n\n          <section>\n\n            <FederalRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n            <StateRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n            <LocalRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n          </section>\n\n          : null }\n\n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default ElectedRepresentatives;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport apikey from './secrets';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport VoterAddresses from './components/VoterAddresses';\nimport VoterInformation from './components/VoterInformation';\nimport Elections from './components/Elections';\nimport ElectedRepresentatives from './components/ElectedRepresentatives';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      addressSubmitted: false,\n      electionsData: null,\n      electionsDataRecieved: false,\n      electedRepresentativesData: null,\n      electedRepresentativesDataRecieved: false,\n      street1: undefined,\n      street2: undefined,\n      city: undefined,\n      state: undefined,\n      country: undefined,\n      votingData: null,\n      votingDataArray: null,\n      votingDataRecieved: false\n\n    };\n  }\n\n  addressReset = () => {\n    this.setState({\n      addressSubmitted: false,\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\"\n    });\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchElectionData();\n    this.fetchElectedRepresentativesData();\n    this.fetchVoterData();\n    this.setState(prevState => ({\n      addressSubmitted: !this.state.addressSubmitted\n    }))\n  }\n\n  fetchElectionData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/elections?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electionsData => {\n        this.setState({\n          electionsData: electionsData,\n          electionsDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchElectedRepresentativesData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electedRepresentativesData => {\n        this.setState({\n          electedRepresentativesData: electedRepresentativesData,\n          electedRepresentativesDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchVoterData = () => {\n\n    const {street1, city, state} = this.state;\n    let votingUrl = `https://www.googleapis.com/civicinfo/v2/voterinfo?key=${apikey}&address=${street1}.${city} ${state}&electionId=2000`;\n\n    fetch(votingUrl)\n      .then(res => res.json())\n      .then((votingData) => {\n        this.setState({\n          votingData: votingData,\n          votingDataArray: Object.values(votingData),\n          votingDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n\n  }\n\n  componentDidMount() {\n    console.log(\"App loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressSubmitted,\n      electedRepresentativesData,\n      electedRepresentativesDataRecieved,\n      votingData,\n      votingDataArray,\n      votingDataRecieved\n    } = this.state;\n\n    return (\n\n      <section className=\"app\">\n\n        <Header />\n\n        <main role=\"main\" aria-label=\"main\">\n\n          <VoterAddresses \n            addressReset={this.addressReset}\n            addressSubmitted={addressSubmitted}\n            handleInputChange={this.handleInputChange}\n            handleSubmit={this.handleSubmit}\n            votingData={votingData}\n            votingDataRecieved={votingDataRecieved}\n          />\n\n\n          { votingDataRecieved ?\n\n            <section className=\"dataOutput\">\n\n              <section className=\"votingInformation\">\n\n                <VoterInformation\n                  votingData={votingData}\n                />\n\n                <ElectedRepresentatives\n                  electedRepresentativesData={electedRepresentativesData}\n                  electedRepresentativesDataRecieved={electedRepresentativesDataRecieved}\n                />\n\n              </section>\n\n              <section className=\"electionsInformation\">\n\n                <Elections \n                  votingData={votingData}\n                  votingDataArray={votingDataArray}\n                />\n\n              </section>\n\n            </section>\n\n          :\n\n            <section className=\"card votingInformationPlaceholder\">\n\n              <h4 className=\"card-title\">Please enter your address in the form</h4>\n              <p className=\"card-text\">Your voting and election information will appear here</p>\n\n            </section>\n\n          }\n\n        </main>\n\n        <Footer />\n\n      </section>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}