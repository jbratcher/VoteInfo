{"version":3,"sources":["secrets.js","AddressForm.js","UserAddress.js","VoterInformation.js","OfficeRaces.js","Referendum.js","ElectedRepresentatives.js","App.js","serviceWorker.js","index.js"],"names":["apikey","AddressForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","_this$props","handleInputChange","handleSubmit","react_default","a","createElement","className","htmlFor","type","name","aria-describedby","aria-label","placeholder","onChange","id","onClick","Component","UserAddress","votingData","normalizedInput","line1","line2","city","zip","VoterInformation","href","electionAdministrationBody","ballotInfoUrl","target","rel","electionInfoUrl","votingLocationFinderUrl","correspondenceAddress","OfficeRaces","Fragment","data-toggle","data-target","aria-expanded","aria-controls","contests","map","contest","key","candidates","concat","String","fromCharCode","office","candidate","party","candidateUrl","Referendum","votingDataArray","some","referendumTitle","referendumSubtitle","referendumUrl","ElectedRepresentatives","electedRepresentativesData","offices","officialIndices","officialIndex","src","officials","photoUrl","alt","urls","App","e","setState","defineProperty","value","preventDefault","fetchElectionData","fetchElectedRepresentativesData","fetchVoterData","_this$state","street1","fetch","then","res","json","electionsData","electionsDataRecieved","catch","error","_this$state2","electedRepresentativesDataRecieved","_this$state3","votingUrl","values","votingDataRecieved","undefined","street2","country","_this$state4","role","src_AddressForm","src_UserAddress","src_VoterInformation","src_ElectedRepresentatives","src_OfficeRaces","src_Referendum","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.941b3749.chunk.js","sourcesContent":["export const apikey = \"AIzaSyAGNAWHYmzPtl9h2vVMmLBhlD5o3Et1NCw\";\n\nexport default apikey;","import React, { Component } from 'react';\n\nclass AddressForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n    \n  }\n\n  componentDidMount() {\n    console.log(\"address form loaded\");\n  }\n\n\n  render() {\n\n    const {\n      handleInputChange,\n      handleSubmit\n    } = this.props;\n\n    return (\n\n      <section className=\"card addressForm\">\n\n        <h2 className=\"card-title\">Enter your address:</h2>\n\n        <form>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street1\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street1\"\n              aria-describedby=\"street1Help\"\n              aria-label=\"street1\"\n              placeholder=\"Street Address\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street1Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. 1600 Pennsylvania Ave NW</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street2\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street2\"\n              aria-describedby=\"street2Help\"\n              aria-label=\"street2\"\n              placeholder=\"Street Address cont.\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street2Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Apt. 231</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"city\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"city\"\n              aria-describedby=\"cityHelp\"\n              aria-label=\"city\"\n              placeholder=\"City\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"cityHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Washington</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"state\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"state\"\n              aria-describedby=\"stateHelp\"\n              aria-label=\"state\"\n              placeholder=\"State\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"stateHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. DC</em>\n            </small>\n          </section>\n\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n\n        </form>\n\n      </section>\n\n    );\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\n\nclass UserAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"user address loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card userAddress\">\n\n        <section className=\"card-body\">\n\n          <h4 className=\"card-title p-2\">Voter registration address: </h4>\n\n          <ul className=\"list-group list-group-flush pt-3 pb-4\">\n            <li className=\"card-text\">{votingData.normalizedInput.line1}</li>\n            { votingData.normalizedInput.line2 ?\n              <li className=\"card-text\">{votingData.normalizedInput.line2}</li>\n            : null }\n            <li className=\"card-text\">{votingData.normalizedInput.city}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.state}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.zip}</li>\n          </ul>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default UserAddress;\n","import React, { Component } from 'react';\n\nclass VoterInformation extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"voter information loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card voterInformation\">\n\n        <section className=\"card-body\">\n        \n          <h4 className=\"card-title p-2\">Voter Information</h4>\n\n          <ul className=\"voterInformationLinks\">\n\n            <li className=\"my-3\">\n              <a\n                href={votingData.state[0].electionAdministrationBody.ballotInfoUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <button type=\"button\" className=\"btn btn-primary\">\n                  Current Ballot\n                </button>\n              </a>\n            </li>\n\n            <li className=\"my-3\">\n              <a\n                href={votingData.state[0].electionAdministrationBody.electionInfoUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    Election Info\n                  </button>\n              </a>\n            </li>\n\n            <li className=\"my-3\">\n              <a\n                href={votingData.state[0].electionAdministrationBody.votingLocationFinderUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    Voting Location Info\n                  </button>\n              </a>\n            </li>\n\n          </ul>\n          \n          <section className=\"card-text mt-5\">\n            <h5 className=\"mb-3\">Election Authority Address</h5>\n            <p><b>{votingData.state[0].electionAdministrationBody.name}</b></p>\n            <p>{votingData.state[0].electionAdministrationBody.correspondenceAddress.line1},</p>\n            <p>\n              {votingData.state[0].electionAdministrationBody.correspondenceAddress.city}, {votingData.state[0].electionAdministrationBody.correspondenceAddress.state}  {votingData.state[0].electionAdministrationBody.correspondenceAddress.zip}\n            </p>\n          </section>\n\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default VoterInformation;\n","import React, { Component } from 'react';\n\nclass OfficeRaces extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"race loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n      \n      <React.Fragment>\n      \n        <h4 className=\"mt-3 mb-1\">Upcoming Races</h4>\n  \n        <section className=\"card text-center my-5\">\n  \n          <button\n            className=\"py-3\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#officeRaces\"\n            aria-expanded=\"true\"\n            aria-controls=\"#officeRaces\"\n          >\n            Candidate Races for Office\n          </button>\n  \n          <section\n            className=\"collapse\"\n            id=\"officeRaces\"\n          >\n  \n          {votingData ?\n          \n            votingData.contests.map((contest, key) => {\n            \n            if(contest.candidates) {\n    \n              return <section\n                className=\"raceCandidates card mb-2\"\n                key={key}\n              >\n    \n                <section\n                  className=\"card-header\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target={`#${String.fromCharCode(key+65)}`}\n                  aria-expanded=\"false\"\n                  aria-controls={`#${String.fromCharCode(key+65)}`}\n                >\n                  <h5 className=\"card-title\">{contest.office}</h5>\n                  <p className=\"card-subtitle\">click to expand</p>\n                </section>\n    \n                <ul\n                  className=\"collapse\"\n                  id={`${String.fromCharCode(key+65)}`}\n                >\n    \n                  {contest.candidates.map((candidate, key) => {\n    \n                    return <li key={key}>\n    \n                      <section className=\"card\">\n                        <section className=\"card-body\">\n                          <h5 className=\"card-title\">{candidate.name}</h5>\n                          <h6 className=\"card-subtitle mb-2 text-muted\">{candidate.party}</h6>\n                          <a\n                            href={candidate.candidateUrl}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"card-link\"\n                          >\n                            Website\n                          </a>\n                        </section>\n                      </section>\n    \n                    </li>\n    \n                  })}\n    \n                </ul>\n    \n              </section>\n              \n            } else {\n              return null;\n            }\n    \n              }) \n            \n            :null }\n  \n          </section>\n  \n        </section>\n        \n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default OfficeRaces;\n","import React, { Component } from 'react';\n\nclass Referendum extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"ballots loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData,\n      votingDataArray\n    } = this.props;\n\n    return (\n      \n      <React.Fragment>\n      \n        <h4 className=\"mt-3 mb-1\">Upcoming Referendum</h4>\n  \n        <section className=\"card text-center my-5\">\n        \n          { votingDataArray[3].some(contest => contest.type === \"Referendum\") ?\n          \n            votingData.contests.map((contest, key) => {\n            \n              if(contest.type === \"Referendum\") {\n      \n                return <section\n                  className=\"card mb-2\"\n                  key={key}\n                >\n                  <section className=\"card-header\">\n                    <h5 className=\"card-title py-1\">{contest.referendumTitle}</h5>\n                    <h6 className=\"card-subtitle py-1\">{contest.referendumSubtitle}</h6>\n                  </section>\n                  \n                  <section className=\"card-body\">\n                    \n                    <p className=\"card-text py-1\">\n                      <a \n                        href={contest.referendumUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Referendum Link\n                      </a>\n                    </p>\n                  </section>\n  \n                </section>;\n      \n              } else {\n              \n                return null;\n                \n              }\n    \n            }) \n            \n          : <p className=\"card-text my-auto py-2\">No upcoming Referendum</p> }\n  \n          </section>\n  \n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default Referendum;\n","import React, { Component } from 'react';\n\nclass ElectedRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"ballots loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card electedRepresentatives\">\n      \n        <section className=\"card-body\">\n        \n          <h4 className=\"card-title p-2\">Elected Representatives</h4>\n  \n          <section className=\"card text-center\">\n  \n            <button\n              className=\"py-3\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#electedRepresentatives\"\n              aria-expanded=\"true\"\n              aria-controls=\"#electedRepresentatives\"\n            >\n              Current Representatives\n            </button>\n  \n            <section\n              className=\"collapse\"\n              id=\"electedRepresentatives\"\n            >\n  \n            {electedRepresentativesData ?\n  \n              electedRepresentativesData.offices.map((office, key) => {\n  \n                return <section\n                  className=\"card mb-2\"\n                  key={key}\n                >\n  \n                  <section\n                    className=\"card-header\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target={`#${String.fromCharCode(key+65)}`}\n                    aria-expanded=\"false\"\n                    aria-controls={`#${String.fromCharCode(key+65)}`}\n                  >\n                    <h5 className=\"card-title\">{office.name}</h5>\n                    <p className=\"card-subtitle\">click to expand</p>\n                  </section>\n                  \n                  <ul\n                    className=\"collapse\"\n                    id={`${String.fromCharCode(key+65)}`}\n                  >\n                  \n                  {office.officialIndices.map((officialIndex, key) => {\n    \n                    return <li key={key}>\n    \n                      <section className=\"card\">\n                        <section className=\"card-header\">\n                          <figure>\n                            <img\n                              className=\"card-img-top\"\n                              src={electedRepresentativesData.officials[officialIndex].photoUrl} \n                              alt={electedRepresentativesData.officials[officialIndex].name}\n                            ></img>\n                          </figure>\n                        </section>\n                        <section className=\"card-body\">\n                          <h5 className=\"card-title\">\n                            {electedRepresentativesData.officials[officialIndex].name}\n                          </h5>\n                          <h6 className=\"card-subtitle mb-2 text-muted\">\n                            {electedRepresentativesData.officials[officialIndex].party}\n                          </h6>\n                          <a\n                            href={electedRepresentativesData.officials[officialIndex].urls}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"card-link\"\n                          >\n                            Website\n                          </a>\n                        </section>\n                      </section>\n    \n                    </li>\n    \n                  })}\n                  \n                  </ul>\n  \n                </section>\n  \n                })\n  \n              :null }\n  \n            </section>\n  \n          </section>\n          \n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default ElectedRepresentatives;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport apikey from './secrets';\nimport AddressForm from './AddressForm';\nimport UserAddress from './UserAddress';\nimport VoterInformation from './VoterInformation';\nimport OfficeRaces from './OfficeRaces';\nimport Referendum from './Referendum'\nimport ElectedRepresentatives from './ElectedRepresentatives';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      electionsData: null,\n      electionsDataRecieved: false,\n      electedRepresentativesData: null,\n      electedRepresentativesDataRecieved: false,\n      street1: undefined,\n      street2: undefined,\n      city: undefined,\n      state: undefined,\n      country: undefined,\n      votingData: null,\n      votingDataArray: null,\n      votingDataRecieved: false\n\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchElectionData();\n    this.fetchElectedRepresentativesData();\n    this.fetchVoterData();\n  }\n\n  fetchElectionData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/elections?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electionsData => {\n        this.setState({\n          electionsData: electionsData,\n          electionsDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchElectedRepresentativesData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electedRepresentativesData => {\n        this.setState({\n          electedRepresentativesData: electedRepresentativesData,\n          electedRepresentativesDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchVoterData = () => {\n\n    const {street1, city, state} = this.state;\n    let votingUrl = `https://www.googleapis.com/civicinfo/v2/voterinfo?key=${apikey}&address=${street1}.${city} ${state}&electionId=2000`;\n\n    fetch(votingUrl)\n      .then(res => res.json())\n      .then((votingData) => {\n        this.setState({\n          votingData: votingData,\n          votingDataArray: Object.values(votingData),\n          votingDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n\n  }\n\n  componentDidMount() {\n    console.log(\"App loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n      electedRepresentativesDataRecieved,\n      votingData,\n      votingDataArray,\n      votingDataRecieved\n    } = this.state;\n\n    return (\n\n      <section className=\"app\">\n\n        <header role=\"banner\" aria-label=\"header\">\n          <h1 className=\"text-primary display-4 my-2\">VoteInfo</h1>\n        </header>\n\n        <main role=\"main\" aria-label=\"main\">\n\n          <AddressForm\n            handleInputChange={this.handleInputChange}\n            handleSubmit={this.handleSubmit}\n          />\n\n          { votingDataRecieved ?\n\n            <section className=\"card\">\n\n              <section className=\"votingInformation\">\n\n                <UserAddress\n                  votingData={votingData}\n                />\n\n                <VoterInformation\n                  votingData={votingData}\n                />\n\n                <ElectedRepresentatives\n                  electedRepresentativesData={electedRepresentativesData}\n                  electedRepresentativesDataRecieved={electedRepresentativesDataRecieved}\n                />\n\n              </section>\n\n              <section className=\"electionsInformation mx-auto\">\n\n                <OfficeRaces\n                  votingData={votingData}\n                />\n\n                <Referendum\n                  votingData={votingData}\n                  votingDataArray={votingDataArray}\n                />\n\n              </section>\n\n            </section>\n\n          :\n\n            <section className=\"informationPlaceholder card text-muted\">\n\n              <h4 className=\"card-title\">Please enter your address in the form</h4>\n              <p className=\"card-text\">Your voting and election information will appear here</p>\n\n            </section>\n\n          }\n\n        </main>\n\n        <footer>\n          <h3 className=\"text-secondary\">VoteInfo 2019</h3>\n        </footer>\n\n      </section>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}