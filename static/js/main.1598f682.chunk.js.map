{"version":3,"sources":["secrets.js","components/Header.js","components/Footer.js","components/AddressForm.js","components/VoterInformation/ElectionAuthorityAddress.js","components/UserAddress.js","components/VoterInformation/VoteInfoButtons.js","components/VoterInformation/index.js","components/OfficeRaces.js","components/Referendum.js","components/ElectedRepresentatives/FederalRepresentatives.js","components/ElectedRepresentatives/StateRepresentatives.js","components/ElectedRepresentatives/LocalRepresentatives.js","components/ElectedRepresentatives/index.js","App.js","serviceWorker.js","index.js"],"names":["apikey","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","react_default","a","createElement","role","aria-label","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-haspopup","aria-labelledby","Component","Footer","target","rel","AddressForm","_this$props","handleInputChange","handleSubmit","htmlFor","name","aria-describedby","placeholder","onChange","onClick","ElectionAuthorityAddress","votingData","electionAdministrationBody","correspondenceAddress","line1","city","zip","UserAddress","addressReset","normalizedInput","line2","class","VoterInformation_ElectionAuthorityAddress","VoteInfoButtons","hidden","ballotInfoUrl","electionInfoUrl","votingLocationFinderUrl","VoterInformation","VoterInformation_VoteInfoButtons","OfficeRaces","contests","map","contest","key","candidates","office","concat","candidate","party","candidateUrl","Referendum","votingDataArray","some","referendumTitle","referendumSubtitle","referendumUrl","FederalRepresentatives","electedRepresentativesData","offices","filter","levels","officialIndices","officialIndex","officials","photoUrl","src","alt","urls","StateRepresentatives","LocalRepresentatives","ElectedRepresentatives","ElectedRepresentatives_FederalRepresentatives","ElectedRepresentatives_StateRepresentatives","ElectedRepresentatives_LocalRepresentatives","App","setState","addressSubmitted","street1","street2","country","e","defineProperty","value","preventDefault","fetchElectionData","fetchElectedRepresentativesData","fetchVoterData","prevState","_this$state","fetch","then","res","json","electionsData","electionsDataRecieved","catch","error","_this$state2","electedRepresentativesDataRecieved","_this$state3","votingUrl","values","votingDataRecieved","undefined","_this$state4","components_Header","components_UserAddress","components_AddressForm","components_VoterInformation","components_ElectedRepresentatives","components_OfficeRaces","components_Referendum","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1598f682.chunk.js","sourcesContent":["export const apikey = \"AIzaSyAGNAWHYmzPtl9h2vVMmLBhlD5o3Et1NCw\";\n\nexport default apikey;","import React, { Component } from 'react';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    console.log(\"Header loaded\");\n  }\n\n\n  render() {\n\n    return (\n\n        <header role=\"banner\" aria-label=\"header\">\n    \n          <nav className=\"navbar navbar-expand-lg navbar-light\">\n          \n            <a className=\"navbar-brand\" id=\"brand\" href=\"#top\">\n              <h1>VoteInfo</h1>\n            </a>\n            \n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainNav\" aria-controls=\"mainNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n          \n            <div className=\"collapse navbar-collapse\" id=\"mainNav\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\" href=\"#top\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#top\">Link</a>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <a className=\"nav-link dropdown-toggle\" href=\"#top\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown\n                  </a>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Action</a>\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Another action</a>\n                    <div className=\"dropdown-divider\"></div>\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Something else here</a>\n                  </div>\n                </li>\n              </ul>\n            </div>\n            \n          </nav>\n    \n        </header>\n\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    console.log(\"Header loaded\");\n  }\n\n\n  render() {\n\n    return (\n\n        <footer role=\"contentinfo\" aria-label=\"footer\">\n\n          <section className=\"subfooter py-3\">\n            <ul className=\"nav justify-content-center\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://developers.google.com/civic-information/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Google Civic Information API\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://www.votinginfoproject.org/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Voting Information Project (VIP)\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://ballotpedia.org/Main_Page\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Ballotpedia\n                </a>\n              </li>\n            </ul>\n          </section>\n\n          <h3 className=\"text-secondary py-3\">VoteInfo 2019</h3>\n\n        </footer>\n\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass AddressForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n\n  }\n\n  componentDidMount() {\n    console.log(\"address form loaded\");\n  }\n\n\n  render() {\n\n    const {\n      handleInputChange,\n      handleSubmit\n    } = this.props;\n\n    return (\n\n      <section className=\"card addressForm\">\n\n        <h2 className=\"card-title\">Your address:</h2>\n\n        <form>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street1\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street1\"\n              aria-describedby=\"street1Help\"\n              aria-label=\"street1\"\n              placeholder=\"Street Address\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street1Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. 1600 Pennsylvania Ave NW</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street2\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street2\"\n              aria-describedby=\"street2Help\"\n              aria-label=\"street2\"\n              placeholder=\"Street Address cont.\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street2Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Apt. 231</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"city\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"city\"\n              aria-describedby=\"cityHelp\"\n              aria-label=\"city\"\n              placeholder=\"City\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"cityHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Washington</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"state\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"state\"\n              aria-describedby=\"stateHelp\"\n              aria-label=\"state\"\n              placeholder=\"State\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"stateHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. DC</em>\n            </small>\n          </section>\n\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n\n        </form>\n\n      </section>\n\n    );\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\n\nclass ElectionAuthorityAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Election Authority Address loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"electionAuthorityAddress\">\n      \n        <section>\n          <h5>Election Authority Address</h5>\n          <p><b>{votingData.state[0].electionAdministrationBody.name}</b></p>\n          <p>{votingData.state[0].electionAdministrationBody.correspondenceAddress.line1},</p>\n          <p>\n            {votingData.state[0].electionAdministrationBody.correspondenceAddress.city}, {votingData.state[0].electionAdministrationBody.correspondenceAddress.state}  {votingData.state[0].electionAdministrationBody.correspondenceAddress.zip}\n          </p>\n        </section>\n        \n      </section>\n\n    );\n  }\n}\n\nexport default ElectionAuthorityAddress;\n","import React, { Component } from 'react';\nimport ElectionAuthorityAddress from './VoterInformation/ElectionAuthorityAddress';\n\nclass UserAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"user address loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressReset,\n      votingData\n    } = this.props;\n\n    return (\n      \n      <section className=\"card registrationAddress\">\n\n        <section className=\"card-body\">\n        \n          <section className=\"userAddress\">\n\n            <h4 className=\"card-title\">Your registration address: </h4>\n  \n            <ul className=\"list-group list-group-flush\">\n              <li className=\"card-text\">{votingData.normalizedInput.line1}</li>\n              { votingData.normalizedInput.line2 ?\n                <li className=\"card-text\">{votingData.normalizedInput.line2}</li>\n              : null }\n              <li className=\"card-text\">{votingData.normalizedInput.city}</li>\n              <li className=\"card-text\">{votingData.normalizedInput.state}</li>\n              <li className=\"card-text\">{votingData.normalizedInput.zip}</li>\n            </ul>\n          \n          </section>\n\n          <section class=\"changeAddress\">\n            <button \n              className=\"btn btn-outline-secondary\"\n              onClick={addressReset}\n              type=\"button\"\n            >\n              Change Address\n            </button>\n          </section>\n  \n\n          <ElectionAuthorityAddress \n            votingData={votingData}\n          />\n        \n        </section>\n\n      </section>\n        \n    );\n  }\n}\n\nexport default UserAddress;\n","import React, { Component } from 'react';\n\nclass VoteInfoButtons extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Vote Info Buttons loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card-body voteInfoButtons\">\n\n        <h4 className=\"card-title\" hidden >Voter Information</h4>\n\n        <ul className=\"voteInfoButtons\">\n\n          <li>\n            <a\n              href={votingData.state[0].electionAdministrationBody.ballotInfoUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <button type=\"button\" className=\"btn btn-primary\">\n                Current Ballot\n              </button>\n            </a>\n          </li>\n\n          <li>\n            <a\n              href={votingData.state[0].electionAdministrationBody.electionInfoUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n                <button type=\"button\" className=\"btn btn-primary\">\n                  Election Info\n                </button>\n            </a>\n          </li>\n\n          <li>\n            \n            <a\n              href={votingData.state[0].electionAdministrationBody.votingLocationFinderUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n                <button type=\"button\" className=\"btn btn-primary\">\n                  Voting Location Info\n                </button>\n            </a>\n          </li>\n\n        </ul>\n\n      </section>\n\n    );\n  }\n}\n\nexport default VoteInfoButtons;\n","import React, { Component } from 'react';\nimport VoteInfoButtons from './VoteInfoButtons';\n\n\nclass VoterInformation extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"Voter Information loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <VoteInfoButtons \n        votingData={votingData}\n      />\n          \n    );\n  }\n}\n\nexport default VoterInformation;\n","import React, { Component } from 'react';\n\nclass OfficeRaces extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"race loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n      \n      <section className=\"card upcomingRacesCard\">\n      \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#upcomingRaces\"\n          aria-expanded=\"true\"\n          aria-controls=\"#upcomingRaces\"\n        >\n          Upcoming Races\n        </button>\n        \n        <section className=\"collapse\" id=\"upcomingRaces\">\n            \n          <section className=\"card text-center officeRaces\">\n    \n            {votingData ?\n            \n              votingData.contests.map((contest, key) => {\n              \n              if(contest.candidates) {\n      \n                return <section\n                  className=\"card raceCandidates\"\n                  key={key}\n                >\n      \n                  <h5 className=\"card-title\" hidden>{contest.office}</h5>\n                  \n                  <button\n                    className=\"btn btn-secondary\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target={`#${contest.office}upcoming`}\n                    aria-expanded=\"true\"\n                    aria-controls={`#${contest.office}upcoming`}\n                  >\n                    {contest.office}\n                  </button>\n        \n                  <section\n                    className=\"collapse\"\n                    id={`${contest.office}upcoming`}\n                  >\n                    \n                    <section className=\"card-body\">\n          \n                      {contest.candidates.map((candidate, key) => {\n        \n                        return <section className=\"card\" key={key}>\n                          <section className=\"card-body\">\n                            <h5 className=\"card-title\">{candidate.name}</h5>\n                            <h6 className=\"card-subtitle text-muted\">{candidate.party}</h6>\n                            <a\n                              href={candidate.candidateUrl}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"card-link\"\n                            >\n                              Website\n                            </a>\n                          </section>\n                        </section>\n        \n                      })}\n                        \n                    </section>\n        \n                  </section>\n      \n                </section>;\n                \n              } else {\n                return null;\n              }\n      \n                }) \n              \n              :null }\n    \n          </section>\n          \n        </section>\n      \n      </section>\n\n    );\n  }\n}\n\nexport default OfficeRaces;\n","import React, { Component } from 'react';\n\nclass Referendum extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"ballots loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData,\n      votingDataArray\n    } = this.props;\n\n    return (\n      \n      <section className=\"card upcomingReferendumCard\">\n      \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#upcomingReferendum\"\n          aria-expanded=\"true\"\n          aria-controls=\"#upcomingReferendum\"\n        >\n          Upcoming Referendum\n        </button>\n        \n        <section className=\"collapse\" id=\"upcomingReferendum\">\n        \n          { votingDataArray[3].some(contest => contest.type === \"Referendum\") ?\n          \n            votingData.contests.map((contest, key) => {\n            \n              if(contest.type === \"Referendum\") {\n      \n                return <section\n                  className=\"card referendum\"\n                  key={key}\n                >\n                \n                  <button\n                    className=\"btn btn-secondary\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target={`#${contest.referendumTitle}upcoming`}\n                    aria-expanded=\"true\"\n                    aria-controls={`#${contest.referendumTitle}upcoming`}\n                  >\n                    {contest.referendumTitle}\n                  </button>\n        \n                  <section\n                    className=\"collapse\"\n                    id={`${contest.referendumTitle}upcoming`}\n                  >\n                \n                    <section className=\"card-body\">\n                  \n                      <h5 className=\"card-title\">{contest.referendumTitle}</h5>\n                      <h6 className=\"card-subtitle\">{contest.referendumSubtitle}</h6>\n  \n                      <p className=\"card-text\">\n                        <a \n                          href={contest.referendumUrl}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Referendum Link\n                        </a>\n                      </p>\n                      \n                    </section>\n                  \n                  </section>\n  \n                </section>;\n      \n              } else {\n              \n                return null;\n                \n              }\n    \n            }) \n            \n          : <p className=\"card-text my-auto\">No upcoming Referendum</p> }\n  \n          </section>\n  \n      </section>\n\n    );\n  }\n}\n\nexport default Referendum;\n","import React, { Component } from 'react';\n\nclass FederalRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"federal representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>Federal Representatives</h4>\n        \n        <section className=\"card federalRepresentativesCard\">\n\n          <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#fedReps\"\n            aria-expanded=\"true\"\n            aria-controls=\"#fedReps\"\n          >\n            Federal Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"fedReps\"\n          >\n          \n            <section className=\"federalRepresentatives card-body text-center\">\n            \n            {electedRepresentativesData ?\n              // get offices that have a level key/value that is \"country\" and iterate\n              electedRepresentativesData.offices\n                .filter(office => office.levels)\n                .filter(office => office.levels[0] === \"country\")\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n  \n                    return <section className=\"card\" key={key}>\n                      \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n  \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                        \n                        <figure>\n                          <img\n                            className=\"card-img-top\"\n                            src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                            alt={electedRepresentativesData.officials[officialIndex].name}\n                          ></img>\n                        </figure>\n                        \n                        : null }\n                    \n                        <h5 className=\"card-title\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n                })\n  \n              :null }\n            \n            </section>\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default FederalRepresentatives;\n","import React, { Component } from 'react';\n\nclass StateRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"state representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>State Representatives</h4>\n        \n        <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#stateReps\"\n            aria-expanded=\"true\"\n            aria-controls=\"#stateReps\"\n          >\n            State Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"stateReps\"\n          >\n        \n            <section className=\"card-body text-center stateRepresentatives\">\n            \n            {electedRepresentativesData ?\n              // get offices that have a level key/value that is \"country\" and iterate\n              electedRepresentativesData.offices\n                .filter(office => office.levels)\n                .filter(office => office.levels[0] === \"administrativeArea1\")\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n                  \n                    return <section className=\"card\" key={key}>\n                    \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n  \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                          <figure>\n                            <img\n                              className=\"card-img-top\"\n                              src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                              alt={electedRepresentativesData.officials[officialIndex].name}\n                            ></img>\n                          </figure>\n                        : null }\n                      \n                        <h5 className=\"card-text\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-text text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                        \n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n              })\n  \n            :null }\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default StateRepresentatives;\n","import React, { Component } from 'react';\n\nclass LocalRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"local representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>Local Representatives</h4>\n          \n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#localReps\"\n          aria-expanded=\"true\"\n          aria-controls=\"#localReps\"\n        >\n          Local Representatives\n        </button>\n\n        <section\n          className=\"collapse\"\n          id=\"localReps\"\n        >\n\n          <section className=\"card-body text-center localRepresentatives\">\n  \n            {electedRepresentativesData ?\n  \n              electedRepresentativesData.offices\n                .filter(office => !office.levels)\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n  \n                    return <section className=\"card\" key={key}>\n                    \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n                        \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                          <figure>\n                            <img\n                              className=\"card-img-top\"\n                              src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                              alt={electedRepresentativesData.officials[officialIndex].name}\n                            ></img>\n                          </figure>\n                        : null}\n                      \n                        <h5 className=\"card-text\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-text mb-2 text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                        \n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n                })\n  \n              :null }\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default LocalRepresentatives;\n","import React, { Component } from 'react';\nimport FederalRepresentatives from './FederalRepresentatives';\nimport StateRepresentatives from './StateRepresentatives';\nimport LocalRepresentatives from './LocalRepresentatives';\n\nclass ElectedRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"elected representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card electedRepresentatives\">\n\n        <h4 className=\"card-title\" hidden>Elected Representatives</h4>\n\n        <section className=\"card representativesCard\">\n\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#electedRepresentatives\"\n            aria-expanded=\"true\"\n            aria-controls=\"#electedRepresentatives\"\n          >\n            Your Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"electedRepresentatives\"\n          >\n\n          { electedRepresentativesData ?\n\n          <section>\n\n            <FederalRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n            <StateRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n            <LocalRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n          </section>\n\n          : null }\n\n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default ElectedRepresentatives;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport apikey from './secrets';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport AddressForm from './components/AddressForm';\nimport UserAddress from './components/UserAddress';\nimport VoterInformation from './components/VoterInformation';\nimport OfficeRaces from './components/OfficeRaces';\nimport Referendum from './components/Referendum';\nimport ElectedRepresentatives from './components/ElectedRepresentatives';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      addressSubmitted: false,\n      electionsData: null,\n      electionsDataRecieved: false,\n      electedRepresentativesData: null,\n      electedRepresentativesDataRecieved: false,\n      street1: undefined,\n      street2: undefined,\n      city: undefined,\n      state: undefined,\n      country: undefined,\n      votingData: null,\n      votingDataArray: null,\n      votingDataRecieved: false\n\n    };\n  }\n\n  addressReset = () => {\n    this.setState({\n      addressSubmitted: false,\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\"\n    });\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchElectionData();\n    this.fetchElectedRepresentativesData();\n    this.fetchVoterData();\n    this.setState(prevState => ({\n      addressSubmitted: !this.state.addressSubmitted\n    }))\n  }\n\n  fetchElectionData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/elections?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electionsData => {\n        this.setState({\n          electionsData: electionsData,\n          electionsDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchElectedRepresentativesData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electedRepresentativesData => {\n        this.setState({\n          electedRepresentativesData: electedRepresentativesData,\n          electedRepresentativesDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchVoterData = () => {\n\n    const {street1, city, state} = this.state;\n    let votingUrl = `https://www.googleapis.com/civicinfo/v2/voterinfo?key=${apikey}&address=${street1}.${city} ${state}&electionId=2000`;\n\n    fetch(votingUrl)\n      .then(res => res.json())\n      .then((votingData) => {\n        this.setState({\n          votingData: votingData,\n          votingDataArray: Object.values(votingData),\n          votingDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n\n  }\n\n  componentDidMount() {\n    console.log(\"App loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressSubmitted,\n      electedRepresentativesData,\n      electedRepresentativesDataRecieved,\n      votingData,\n      votingDataArray,\n      votingDataRecieved\n    } = this.state;\n\n    return (\n\n      <section className=\"app\">\n\n        <Header />\n\n        <main role=\"main\" aria-label=\"main\">\n\n          { votingDataRecieved && addressSubmitted ?\n            <UserAddress\n              addressReset={this.addressReset}\n              votingData={votingData}\n            />\n          : <AddressForm\n                    handleInputChange={this.handleInputChange}\n                    handleSubmit={this.handleSubmit}\n                    />\n          }\n\n\n          { votingDataRecieved ?\n\n            <section className=\"dataOutput\">\n\n              <section className=\"votingInformation\">\n\n                <VoterInformation\n                  votingData={votingData}\n                />\n\n                <ElectedRepresentatives\n                  electedRepresentativesData={electedRepresentativesData}\n                  electedRepresentativesDataRecieved={electedRepresentativesDataRecieved}\n                />\n\n              </section>\n\n              <section className=\"electionsInformation\">\n\n                <OfficeRaces\n                  votingData={votingData}\n                />\n\n                <Referendum\n                  votingData={votingData}\n                  votingDataArray={votingDataArray}\n                />\n\n              </section>\n\n            </section>\n\n          :\n\n            <section className=\"card votingInformationPlaceholder\">\n\n              <h4 className=\"card-title\">Please enter your address in the form</h4>\n              <p className=\"card-text\">Your voting and election information will appear here</p>\n\n            </section>\n\n          }\n\n        </main>\n\n        <Footer />\n\n      </section>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}