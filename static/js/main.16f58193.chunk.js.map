{"version":3,"sources":["secrets.js","AddressForm.js","UserAddress.js","VoterInformation.js","OfficeRaces.js","Referendum.js","ElectedRepresentatives/FederalRepresentatives.js","ElectedRepresentatives/StateRepresentatives.js","ElectedRepresentatives/LocalRepresentatives.js","ElectedRepresentatives/index.js","App.js","serviceWorker.js","index.js"],"names":["apikey","AddressForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","_this$props","handleInputChange","handleSubmit","react_default","a","createElement","className","htmlFor","type","name","aria-describedby","aria-label","placeholder","onChange","id","onClick","Component","UserAddress","addressReset","votingData","normalizedInput","line1","line2","city","zip","VoterInformation","hidden","href","electionAdministrationBody","ballotInfoUrl","target","rel","electionInfoUrl","votingLocationFinderUrl","correspondenceAddress","OfficeRaces","data-toggle","data-target","aria-expanded","aria-controls","contests","map","contest","key","candidates","office","candidate","party","candidateUrl","Referendum","votingDataArray","some","referendumTitle","referendumSubtitle","referendumUrl","FederalRepresentatives","electedRepresentativesData","offices","filter","levels","officialIndices","officialIndex","officials","photoUrl","src","alt","urls","StateRepresentatives","LocalRepresentatives","ElectedRepresentatives","ElectedRepresentatives_FederalRepresentatives","ElectedRepresentatives_StateRepresentatives","ElectedRepresentatives_LocalRepresentatives","App","setState","addressSubmitted","e","defineProperty","value","preventDefault","fetchElectionData","fetchElectedRepresentativesData","fetchVoterData","prevState","_this$state","street1","fetch","concat","then","res","json","electionsData","electionsDataRecieved","catch","error","_this$state2","electedRepresentativesDataRecieved","_this$state3","votingUrl","values","votingDataRecieved","undefined","street2","country","_this$state4","role","class","aria-haspopup","aria-labelledby","src_UserAddress","src_AddressForm","src_VoterInformation","src_ElectedRepresentatives","src_OfficeRaces","src_Referendum","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.16f58193.chunk.js","sourcesContent":["export const apikey = \"AIzaSyAGNAWHYmzPtl9h2vVMmLBhlD5o3Et1NCw\";\n\nexport default apikey;","import React, { Component } from 'react';\n\nclass AddressForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n\n  }\n\n  componentDidMount() {\n    console.log(\"address form loaded\");\n  }\n\n\n  render() {\n\n    const {\n      handleInputChange,\n      handleSubmit\n    } = this.props;\n\n    return (\n\n      <section className=\"card addressForm\">\n\n        <h2 className=\"card-title\">Your address:</h2>\n\n        <form>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street1\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street1\"\n              aria-describedby=\"street1Help\"\n              aria-label=\"street1\"\n              placeholder=\"Street Address\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street1Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. 1600 Pennsylvania Ave NW</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street2\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street2\"\n              aria-describedby=\"street2Help\"\n              aria-label=\"street2\"\n              placeholder=\"Street Address cont.\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street2Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Apt. 231</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"city\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"city\"\n              aria-describedby=\"cityHelp\"\n              aria-label=\"city\"\n              placeholder=\"City\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"cityHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Washington</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"state\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"state\"\n              aria-describedby=\"stateHelp\"\n              aria-label=\"state\"\n              placeholder=\"State\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"stateHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. DC</em>\n            </small>\n          </section>\n\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n\n        </form>\n\n      </section>\n\n    );\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\n\nclass UserAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"user address loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressReset,\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card userAddress\">\n\n        <section className=\"card-body\">\n\n          <h4 className=\"card-title\">Your registration address: </h4>\n\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"card-text\">{votingData.normalizedInput.line1}</li>\n            { votingData.normalizedInput.line2 ?\n              <li className=\"card-text\">{votingData.normalizedInput.line2}</li>\n            : null }\n            <li className=\"card-text\">{votingData.normalizedInput.city}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.state}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.zip}</li>\n          </ul>\n\n        </section>\n\n        <section className=\"card-footer\">\n\n          <button \n            className=\"btn btn-outline-secondary\"\n            onClick={addressReset}\n            type=\"button\"\n          >\n            Change Address\n          </button>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default UserAddress;\n","import React, { Component } from 'react';\n\nclass VoterInformation extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"voter information loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card voterInformation\">\n\n        <section className=\"card-body\">\n\n          <h4 className=\"card-title\" hidden >Voter Information</h4>\n\n          <ul className=\"voteInfoButtons\">\n\n            <li>\n              <a\n                href={votingData.state[0].electionAdministrationBody.ballotInfoUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <button type=\"button\" className=\"btn btn-primary\">\n                  Current Ballot\n                </button>\n              </a>\n            </li>\n\n            <li>\n              <a\n                href={votingData.state[0].electionAdministrationBody.electionInfoUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    Election Info\n                  </button>\n              </a>\n            </li>\n\n            <li>\n              <a\n                href={votingData.state[0].electionAdministrationBody.votingLocationFinderUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    Voting Location Info\n                  </button>\n              </a>\n            </li>\n\n          </ul>\n\n          <section className=\"card\">\n          \n            <section className=\"card-body\">\n              <h5 className=\"card-title\">Election Authority Address</h5>\n              <p className=\"card-text\"><b>{votingData.state[0].electionAdministrationBody.name}</b></p>\n              <p className=\"card-text\">{votingData.state[0].electionAdministrationBody.correspondenceAddress.line1},</p>\n              <p className=\"card-text\">\n                {votingData.state[0].electionAdministrationBody.correspondenceAddress.city}, {votingData.state[0].electionAdministrationBody.correspondenceAddress.state}  {votingData.state[0].electionAdministrationBody.correspondenceAddress.zip}\n              </p>\n            </section>\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default VoterInformation;\n","import React, { Component } from 'react';\n\nclass OfficeRaces extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"race loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n      \n      <section className=\"card upcomingRacesCard\">\n      \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#upcomingRaces\"\n          aria-expanded=\"true\"\n          aria-controls=\"#upcomingRaces\"\n        >\n          Upcoming Races\n        </button>\n        \n        <section className=\"collapse\" id=\"upcomingRaces\">\n            \n          <section className=\"card text-center officeRaces\">\n    \n            {votingData ?\n            \n              votingData.contests.map((contest, key) => {\n              \n              if(contest.candidates) {\n      \n                return <section\n                  className=\"card raceCandidates\"\n                  key={key}\n                >\n      \n                  <section\n                    className=\"card-header\"\n                  >\n                    <h5 className=\"card-title\">{contest.office}</h5>\n                  </section>\n                  \n                  <section className=\"card-body\">\n        \n                      {contest.candidates.map((candidate, key) => {\n        \n                        return <section className=\"card\" key={key}>\n                          <section className=\"card-body\">\n                            <h5 className=\"card-title\">{candidate.name}</h5>\n                            <h6 className=\"card-subtitle text-muted\">{candidate.party}</h6>\n                            <a\n                              href={candidate.candidateUrl}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"card-link\"\n                            >\n                              Website\n                            </a>\n                          </section>\n                        </section>\n        \n                      })}\n        \n                  </section>\n      \n                </section>;\n                \n              } else {\n                return null;\n              }\n      \n                }) \n              \n              :null }\n    \n          </section>\n          \n        </section>\n      \n      </section>\n\n    );\n  }\n}\n\nexport default OfficeRaces;\n","import React, { Component } from 'react';\n\nclass Referendum extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"ballots loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData,\n      votingDataArray\n    } = this.props;\n\n    return (\n      \n      <section className=\"card upcomingReferendumCard\">\n      \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#upcomingReferendum\"\n          aria-expanded=\"true\"\n          aria-controls=\"#upcomingReferendum\"\n        >\n          Upcoming Referendum\n        </button>\n        \n        <section className=\"collapse\" id=\"upcomingReferendum\">\n        \n          { votingDataArray[3].some(contest => contest.type === \"Referendum\") ?\n          \n            votingData.contests.map((contest, key) => {\n            \n              if(contest.type === \"Referendum\") {\n      \n                return <section\n                  className=\"card referendum\"\n                  key={key}\n                >\n                \n                  <section className=\"card-body\">\n                \n                    <h5 className=\"card-title\">{contest.referendumTitle}</h5>\n                    <h6 className=\"card-subtitle\">{contest.referendumSubtitle}</h6>\n\n                    <p className=\"card-text\">\n                      <a \n                        href={contest.referendumUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Referendum Link\n                      </a>\n                    </p>\n                    \n                  </section>\n  \n                </section>;\n      \n              } else {\n              \n                return null;\n                \n              }\n    \n            }) \n            \n          : <p className=\"card-text my-auto\">No upcoming Referendum</p> }\n  \n          </section>\n  \n      </section>\n\n    );\n  }\n}\n\nexport default Referendum;\n","import React, { Component } from 'react';\n\nclass FederalRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"federal representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <section className=\"card-header\">\n\n          <h4 className=\"card-title\">Federal Representatives</h4>\n          \n        </section>\n\n        <section className=\"card-body text-center federalRepresentatives\">\n\n          {electedRepresentativesData ?\n            // get offices that have a level key/value that is \"country\" and iterate\n            electedRepresentativesData.offices\n              .filter(office => office.levels)\n              .filter(office => office.levels[0] === \"country\")\n              .map((office, key) => {\n\n              return <section\n                className=\"card\"\n                key={office.name}\n              >\n\n                {office.officialIndices.map((officialIndex, key) => {\n\n                  return <section className=\"card\" key={key}>\n                    \n                    <section className=\"card-header\">\n                    \n                      <h5 className=\"card-title\">{office.name}</h5>\n\n                    </section>\n                    \n                    <section className=\"card-body\">\n                    \n                      { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                      \n                      <figure>\n                        <img\n                          className=\"card-img-top\"\n                          src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                          alt={electedRepresentativesData.officials[officialIndex].name}\n                        ></img>\n                      </figure>\n                      \n                      : null }\n                  \n                      <h5 className=\"card-title\">\n                        {electedRepresentativesData.officials[officialIndex].name}\n                      </h5>\n                      <h6 className=\"card-subtitle mb-2 text-muted\">\n                        {electedRepresentativesData.officials[officialIndex].party}\n                      </h6>\n                      <a\n                        href={electedRepresentativesData.officials[officialIndex].urls}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"card-link\"\n                      >\n                        Website\n                      </a>\n                    </section>\n                    \n                  </section>;\n\n                })}\n\n              </section>;\n\n              })\n\n            :null }\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default FederalRepresentatives;\n","import React, { Component } from 'react';\n\nclass StateRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"state representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <section className=\"card-header\">\n\n          <h4 className=\"card-title\">State Representatives</h4>\n        \n        </section>\n\n        <section className=\"card-body text-center stateRepresentatives\">\n        \n          {electedRepresentativesData ?\n            // get offices that have a level key/value that is \"country\" and iterate\n            electedRepresentativesData.offices\n              .filter(office => office.levels)\n              .filter(office => office.levels[0] === \"administrativeArea1\")\n              .map((office, key) => {\n\n              return <section\n                className=\"card\"\n                key={office.name}\n              >\n\n                {office.officialIndices.map((officialIndex, key) => {\n                \n                  return <section className=\"card\" key={key}>\n                  \n                    <section className=\"card-header\">\n                    \n                      <h5 className=\"card-title\">{office.name}</h5>\n\n                    </section>\n                    \n                    <section className=\"card-body\">\n                    \n                      { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                        <figure>\n                          <img\n                            className=\"card-img-top\"\n                            src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                            alt={electedRepresentativesData.officials[officialIndex].name}\n                          ></img>\n                        </figure>\n                      : null }\n                    \n                      <h5 className=\"card-text\">\n                        {electedRepresentativesData.officials[officialIndex].name}\n                      </h5>\n                      <h6 className=\"card-text text-muted\">\n                        {electedRepresentativesData.officials[officialIndex].party}\n                      </h6>\n                      <a\n                        href={electedRepresentativesData.officials[officialIndex].urls}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"card-link\"\n                      >\n                        Website\n                      </a>\n                      \n                    </section>\n                    \n                  </section>;\n\n                })}\n\n              </section>;\n\n              })\n\n            :null }\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default StateRepresentatives;\n","import React, { Component } from 'react';\n\nclass LocalRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"local representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <section className=\"card-header\">\n\n          <h4 className=\"card-title p-2\">Local Representatives</h4>\n          \n        </section>\n\n        <section className=\"card-body text-center localRepresentatives\">\n\n          {electedRepresentativesData ?\n\n            electedRepresentativesData.offices\n              .filter(office => !office.levels)\n              .map((office, key) => {\n\n              return <section\n                className=\"card\"\n                key={office.name}\n              >\n\n                {office.officialIndices.map((officialIndex, key) => {\n\n                  return <section className=\"card\" key={key}>\n                  \n                    <section className=\"card-header\">\n                    \n                      <h5 className=\"card-title\">{office.name}</h5>\n                      \n                    </section>\n                    \n                    <section className=\"card-body\">\n                    \n                      { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                        <figure>\n                          <img\n                            className=\"card-img-top\"\n                            src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                            alt={electedRepresentativesData.officials[officialIndex].name}\n                          ></img>\n                        </figure>\n                      : null}\n                    \n                      <h5 className=\"card-text\">\n                        {electedRepresentativesData.officials[officialIndex].name}\n                      </h5>\n                      <h6 className=\"card-text mb-2 text-muted\">\n                        {electedRepresentativesData.officials[officialIndex].party}\n                      </h6>\n                      <a\n                        href={electedRepresentativesData.officials[officialIndex].urls}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"card-link\"\n                      >\n                        Website\n                      </a>\n                      \n                    </section>\n                    \n                  </section>\n\n                })}\n\n              </section>;\n\n              })\n\n            :null }\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default LocalRepresentatives;\n","import React, { Component } from 'react';\nimport FederalRepresentatives from './FederalRepresentatives';\nimport StateRepresentatives from './StateRepresentatives';\nimport LocalRepresentatives from './LocalRepresentatives';\n\nclass ElectedRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"elected representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card electedRepresentatives\">\n\n        <h4 className=\"card-title\" hidden>Elected Representatives</h4>\n\n        <section className=\"card representativesCard\">\n\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#electedRepresentatives\"\n            aria-expanded=\"true\"\n            aria-controls=\"#electedRepresentatives\"\n          >\n            Your Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"electedRepresentatives\"\n          >\n\n          { electedRepresentativesData ?\n\n          <section>\n\n            <FederalRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n            <StateRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n            <LocalRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n          </section>\n\n          : null }\n\n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default ElectedRepresentatives;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport apikey from './secrets';\nimport AddressForm from './AddressForm';\nimport UserAddress from './UserAddress';\nimport VoterInformation from './VoterInformation';\nimport OfficeRaces from './OfficeRaces';\nimport Referendum from './Referendum';\nimport ElectedRepresentatives from './ElectedRepresentatives';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      addressSubmitted: false,\n      electionsData: null,\n      electionsDataRecieved: false,\n      electedRepresentativesData: null,\n      electedRepresentativesDataRecieved: false,\n      street1: undefined,\n      street2: undefined,\n      city: undefined,\n      state: undefined,\n      country: undefined,\n      votingData: null,\n      votingDataArray: null,\n      votingDataRecieved: false\n\n    }\n  }\n\n  addressReset = () => {\n    this.setState({\n      addressSubmitted: false\n    })\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchElectionData();\n    this.fetchElectedRepresentativesData();\n    this.fetchVoterData();\n    this.setState(prevState => ({\n      addressSubmitted: !this.state.addressSubmitted\n    }))\n  }\n\n  fetchElectionData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/elections?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electionsData => {\n        this.setState({\n          electionsData: electionsData,\n          electionsDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchElectedRepresentativesData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electedRepresentativesData => {\n        this.setState({\n          electedRepresentativesData: electedRepresentativesData,\n          electedRepresentativesDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchVoterData = () => {\n\n    const {street1, city, state} = this.state;\n    let votingUrl = `https://www.googleapis.com/civicinfo/v2/voterinfo?key=${apikey}&address=${street1}.${city} ${state}&electionId=2000`;\n\n    fetch(votingUrl)\n      .then(res => res.json())\n      .then((votingData) => {\n        this.setState({\n          votingData: votingData,\n          votingDataArray: Object.values(votingData),\n          votingDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n\n  }\n\n  componentDidMount() {\n    console.log(\"App loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressSubmitted,\n      electedRepresentativesData,\n      electedRepresentativesDataRecieved,\n      votingData,\n      votingDataArray,\n      votingDataRecieved\n    } = this.state;\n\n    return (\n\n      <section className=\"app\">\n\n        <header role=\"banner\" aria-label=\"header\">\n\n          <nav class=\"navbar navbar-expand-lg navbar-light\">\n          \n            <a class=\"navbar-brand card\" id=\"brand\" href=\"#top\">\n              <h1>VoteInfo</h1>\n            </a>\n            \n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainNav\" aria-controls=\"mainNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n          \n            <div class=\"collapse navbar-collapse card\" id=\"mainNav\">\n              <ul class=\"navbar-nav\">\n                <li class=\"nav-item active\">\n                  <a class=\"nav-link\" href=\"#top\">Home <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"#top\">Link</a>\n                </li>\n                <li class=\"nav-item dropdown\">\n                  <a class=\"nav-link dropdown-toggle\" href=\"#top\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown\n                  </a>\n                  <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a class=\"dropdown-item\" href=\"#navbarDropdown\">Action</a>\n                    <a class=\"dropdown-item\" href=\"#navbarDropdown\">Another action</a>\n                    <div class=\"dropdown-divider\"></div>\n                    <a class=\"dropdown-item\" href=\"#navbarDropdown\">Something else here</a>\n                  </div>\n                </li>\n              </ul>\n            </div>\n            \n          </nav>\n\n        </header>\n\n        <main role=\"main\" aria-label=\"main\">\n\n          { votingDataRecieved && addressSubmitted ?\n            <UserAddress\n              addressReset={this.addressReset}\n              votingData={votingData}\n            />\n          : <AddressForm\n                    handleInputChange={this.handleInputChange}\n                    handleSubmit={this.handleSubmit}\n                    />\n          }\n\n\n          { votingDataRecieved ?\n\n            <section className=\"dataOutput\">\n\n              <section className=\"votingInformation\">\n\n                <VoterInformation\n                  votingData={votingData}\n                />\n\n                <ElectedRepresentatives\n                  electedRepresentativesData={electedRepresentativesData}\n                  electedRepresentativesDataRecieved={electedRepresentativesDataRecieved}\n                />\n\n              </section>\n\n              <section className=\"electionsInformation\">\n\n                <OfficeRaces\n                  votingData={votingData}\n                />\n\n                <Referendum\n                  votingData={votingData}\n                  votingDataArray={votingDataArray}\n                />\n\n              </section>\n\n            </section>\n\n          :\n\n            <section className=\"card text-muted informationPlaceholder\">\n\n              <h4 className=\"card-title\">Please enter your address in the form</h4>\n              <p className=\"card-text\">Your voting and election information will appear here</p>\n\n            </section>\n\n          }\n\n        </main>\n\n        <footer>\n\n          <section className=\"subfooter py-3\">\n            <ul className=\"nav justify-content-center\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://developers.google.com/civic-information/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Google Civic Information API\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://www.votinginfoproject.org/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Voting Information Project (VIP)\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://ballotpedia.org/Main_Page\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Ballotpedia\n                </a>\n              </li>\n            </ul>\n          </section>\n\n          <h3 className=\"text-secondary py-3\">VoteInfo 2019</h3>\n\n        </footer>\n\n      </section>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}