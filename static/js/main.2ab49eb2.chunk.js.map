{"version":3,"sources":["secrets.js","AddressForm.js","UserAddress.js","VoterInformation.js","Race.js","App.js","serviceWorker.js","index.js"],"names":["apikey","AddressForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","_this$props","handleInputChange","handleSubmit","react_default","a","createElement","className","htmlFor","type","name","aria-describedby","placeholder","onChange","id","onClick","Component","UserAddress","votingData","normalizedInput","line1","line2","city","zip","VoterInformation","href","electionAdministrationBody","ballotInfoUrl","target","rel","electionInfoUrl","votingLocationFinderUrl","correspondenceAddress","data-toggle","data-target","aria-expanded","aria-controls","contests","map","contest","key","concat","String","fromCharCode","office","candidates","candidate","party","candidateUrl","App","e","setState","defineProperty","value","preventDefault","fetchElectionData","fetchVoterData","_this$state","street1","fetch","then","res","json","electionsData","electionsDataRecieved","data","catch","error","_this$state2","votingUrl","votingDataRecieved","undefined","street2","country","_this$state3","role","src_AddressForm","src_UserAddress","src_VoterInformation","Race","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2ab49eb2.chunk.js","sourcesContent":["export const apikey = \"AIzaSyAGNAWHYmzPtl9h2vVMmLBhlD5o3Et1NCw\";\n\nexport default apikey;","import React, { Component } from 'react';\n\nclass AddressForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"address form\");\n  }\n\n\n  render() {\n\n    const {\n      handleInputChange,\n      handleSubmit\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h2 className=\"card-title\">Enter your address:</h2>\n\n        <form>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street1\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street1\"\n              aria-describedby=\"street1Help\"\n              placeholder=\"Street Address\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"emailHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. 1600 Pennsylvania Ave NW</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street2\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street2\"\n              aria-describedby=\"street2Help\"\n              placeholder=\"Street Address cont.\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street2Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Apt. 231</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"city\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"city\"\n              aria-describedby=\"cityHelp\"\n              placeholder=\"City\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"cityHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Washington</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"state\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"state\"\n              aria-describedby=\"state\"\n              placeholder=\"State\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"stateHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. DC</em>\n            </small>\n          </section>\n\n\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n\n        </form>\n\n      </section>\n\n    );\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\n\nclass UserAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"address form\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card userAddress\">\n\n        <section className=\"card-body\">\n\n          <h4 className=\"card-title p-1\">Voter registration address: </h4>\n\n          <ul className=\"list-group list-group-flush pt-3 pb-4\">\n            <li className=\"card-text\">{votingData.normalizedInput.line1}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.line2}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.city}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.state}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.zip}</li>\n          </ul>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default UserAddress;\n","import React, { Component } from 'react';\n\nclass VoterInformation extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"address form\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card voterInformation\">\n\n        <section className=\"card-body\">\n\n          <h4 className=\"listHeader card-title mb-4\">\n            Voter Information\n          </h4>\n\n          <ul id=\"voterInformation\">\n\n            <li className=\"my-3\">\n              <a\n                href={votingData.state[0].electionAdministrationBody.ballotInfoUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <button type=\"button\" className=\"btn btn-primary\">\n                  Current Ballot\n                </button>\n              </a>\n            </li>\n\n            <li className=\"my-3\">\n              <a\n                href={votingData.state[0].electionAdministrationBody.electionInfoUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    Election Info\n                  </button>\n              </a>\n            </li>\n\n            <li className=\"my-3\">\n              <a\n                href={votingData.state[0].electionAdministrationBody.votingLocationFinderUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    Voting Location Info\n                  </button>\n              </a>\n            </li>\n\n            <li className=\"card-text my-3\">\n              <p><b>{votingData.state[0].electionAdministrationBody.name}</b></p>\n              <p>{votingData.state[0].electionAdministrationBody.correspondenceAddress.line1},</p>\n              <p>\n                {votingData.state[0].electionAdministrationBody.correspondenceAddress.city}, {votingData.state[0].electionAdministrationBody.correspondenceAddress.state}  {votingData.state[0].electionAdministrationBody.correspondenceAddress.zip}\n              </p>\n            </li>\n\n          </ul>\n\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default VoterInformation;\n","import React, { Component } from 'react';\n\nclass UserAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"address form\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card text-center my-5\">\n\n        <button\n          className=\"py-3\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#senatorRace\"\n          aria-expanded=\"true\"\n          aria-controls=\"#senatorRace\"\n        >\n          Candidate Races for Office\n        </button>\n\n        <section\n          className=\"collapse\"\n          id=\"senatorRace\"\n        >\n\n        {votingData.contests.map((contest, key) => {\n\n          return <section\n            className=\"raceCandidates card mb-2\"\n            key={key}\n          >\n\n            <section\n              className=\"card-header\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target={`#${String.fromCharCode(key+65)}`}\n              aria-expanded=\"false\"\n              aria-controls={`#${String.fromCharCode(key+65)}`}\n            >\n              <h5 className=\"card-title\">{contest.office}</h5>\n              <p className=\"card-subtitle\">click to expand</p>\n            </section>\n\n            <ul\n              className=\"collapse\"\n              id={`${String.fromCharCode(key+65)}`}\n            >\n\n              {contest.candidates.map((candidate, key) => {\n\n                return <li key={key}>\n\n                  <section className=\"card\">\n                    <section className=\"card-body\">\n                      <h5 className=\"card-title\">{candidate.name}</h5>\n                      <h6 className=\"card-subtitle mb-2 text-muted\">{candidate.party}</h6>\n                      <a\n                        href={candidate.candidateUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"card-link\"\n                      >\n                        Website\n                      </a>\n                    </section>\n                  </section>\n\n                </li>\n\n              })}\n\n            </ul>\n\n          </section>\n\n          })}\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default UserAddress;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport apikey from './secrets';\nimport AddressForm from './AddressForm';\nimport UserAddress from './UserAddress';\nimport VoterInformation from './VoterInformation';\nimport Race from './Race';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      electionsData: null,\n      electionsDataRecieved: false,\n      street1: undefined,\n      street2: undefined,\n      city: undefined,\n      state: undefined,\n      country: undefined,\n      votingData: null,\n      votingDataRecieved: false\n\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchElectionData();\n    this.fetchVoterData();\n  }\n\n  fetchElectionData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/elections?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electionsData => {\n        this.setState({\n          electionsData: electionsData,\n          electionsDataRecieved: true\n        })\n      })\n      .then(data => console.log(this.state.electionsData))\n      .catch(error => console.log(error))\n  }\n\n  fetchVoterData = () => {\n\n    const {street1, city, state} = this.state;\n    let votingUrl = `https://www.googleapis.com/civicinfo/v2/voterinfo?key=${apikey}&address=${street1}.${city} ${state}&electionId=2000`;\n\n    fetch(votingUrl)\n      .then(res => res.json())\n      .then((votingData) => {\n        this.setState({\n          votingData: votingData,\n          votingDataRecieved: true\n        });\n      })\n      .then(() => console.log(this.state.votingData))\n      .catch(error => console.log(error));\n\n  }\n\n  componentDidMount() {\n    console.log(\"loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData,\n      votingDataRecieved\n    } = this.state;\n\n    return (\n\n      <section className=\"app\">\n\n        <header role=\"heading\">\n          <h1 className=\"text-primary\">VoteInfo</h1>\n        </header>\n\n        <main role=\"Main\">\n\n          <AddressForm\n            handleInputChange={this.handleInputChange}\n            handleSubmit={this.handleSubmit}\n          />\n\n          { votingDataRecieved ?\n\n            <section className=\"card\">\n            \n              <section className=\"votingInformation\">\n\n                <UserAddress\n                  votingData={votingData}\n                />\n  \n                <VoterInformation\n                  votingData={votingData}\n                />\n                \n              </section>\n              \n              <section className=\"electionsInformation mx-auto\">\n                  \n                <Race\n                  votingData={votingData}\n                />\n\n              </section>\n\n            </section>\n\n          : null }\n\n        </main>\n\n        <footer>\n          <h3 className=\"text-secondary\">VoteInfo 2019</h3>\n        </footer>\n\n      </section>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}