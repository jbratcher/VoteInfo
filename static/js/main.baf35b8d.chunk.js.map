{"version":3,"sources":["secrets.js","Header.js","Footer.js","AddressForm.js","UserAddress.js","VoterInformation.js","OfficeRaces.js","Referendum.js","ElectedRepresentatives/FederalRepresentatives.js","ElectedRepresentatives/StateRepresentatives.js","ElectedRepresentatives/LocalRepresentatives.js","ElectedRepresentatives/index.js","App.js","serviceWorker.js","index.js"],"names":["apikey","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","react_default","a","createElement","role","aria-label","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-haspopup","aria-labelledby","Component","Footer","target","rel","AddressForm","_this$props","handleInputChange","handleSubmit","htmlFor","name","aria-describedby","placeholder","onChange","onClick","UserAddress","addressReset","votingData","normalizedInput","line1","line2","city","zip","VoterInformation","hidden","electionAdministrationBody","ballotInfoUrl","electionInfoUrl","votingLocationFinderUrl","correspondenceAddress","OfficeRaces","contests","map","contest","key","candidates","office","candidate","party","candidateUrl","Referendum","votingDataArray","some","referendumTitle","referendumSubtitle","referendumUrl","FederalRepresentatives","electedRepresentativesData","offices","filter","levels","officialIndices","officialIndex","officials","photoUrl","src","alt","urls","StateRepresentatives","LocalRepresentatives","ElectedRepresentatives","ElectedRepresentatives_FederalRepresentatives","ElectedRepresentatives_StateRepresentatives","ElectedRepresentatives_LocalRepresentatives","App","setState","addressSubmitted","street1","street2","country","e","defineProperty","value","preventDefault","fetchElectionData","fetchElectedRepresentativesData","fetchVoterData","prevState","_this$state","fetch","concat","then","res","json","electionsData","electionsDataRecieved","catch","error","_this$state2","electedRepresentativesDataRecieved","_this$state3","votingUrl","values","votingDataRecieved","undefined","_this$state4","src_Header","src_UserAddress","src_AddressForm","src_VoterInformation","src_ElectedRepresentatives","src_OfficeRaces","src_Referendum","src_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.baf35b8d.chunk.js","sourcesContent":["export const apikey = \"AIzaSyAGNAWHYmzPtl9h2vVMmLBhlD5o3Et1NCw\";\n\nexport default apikey;","import React, { Component } from 'react';\nimport './App.scss';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    console.log(\"Header loaded\");\n  }\n\n\n  render() {\n\n    return (\n\n        <header role=\"banner\" aria-label=\"header\">\n    \n          <nav className=\"navbar navbar-expand-lg navbar-light\">\n          \n            <a className=\"navbar-brand\" id=\"brand\" href=\"#top\">\n              <h1>VoteInfo</h1>\n            </a>\n            \n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainNav\" aria-controls=\"mainNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n          \n            <div className=\"collapse navbar-collapse\" id=\"mainNav\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\" href=\"#top\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#top\">Link</a>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <a className=\"nav-link dropdown-toggle\" href=\"#top\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown\n                  </a>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Action</a>\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Another action</a>\n                    <div className=\"dropdown-divider\"></div>\n                    <a className=\"dropdown-item\" href=\"#navbarDropdown\">Something else here</a>\n                  </div>\n                </li>\n              </ul>\n            </div>\n            \n          </nav>\n    \n        </header>\n\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './App.scss';\n\nclass Footer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    console.log(\"Header loaded\");\n  }\n\n\n  render() {\n\n    return (\n\n        <footer role=\"contentinfo\" aria-label=\"footer\">\n\n          <section className=\"subfooter py-3\">\n            <ul className=\"nav justify-content-center\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://developers.google.com/civic-information/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Google Civic Information API\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://www.votinginfoproject.org/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Voting Information Project (VIP)\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  href=\"https://ballotpedia.org/Main_Page\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Ballotpedia\n                </a>\n              </li>\n            </ul>\n          </section>\n\n          <h3 className=\"text-secondary py-3\">VoteInfo 2019</h3>\n\n        </footer>\n\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass AddressForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n\n  }\n\n  componentDidMount() {\n    console.log(\"address form loaded\");\n  }\n\n\n  render() {\n\n    const {\n      handleInputChange,\n      handleSubmit\n    } = this.props;\n\n    return (\n\n      <section className=\"card addressForm\">\n\n        <h2 className=\"card-title\">Your address:</h2>\n\n        <form>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street1\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street1\"\n              aria-describedby=\"street1Help\"\n              aria-label=\"street1\"\n              placeholder=\"Street Address\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street1Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. 1600 Pennsylvania Ave NW</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"street2\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"street2\"\n              aria-describedby=\"street2Help\"\n              aria-label=\"street2\"\n              placeholder=\"Street Address cont.\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"street2Help\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Apt. 231</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"city\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"city\"\n              aria-describedby=\"cityHelp\"\n              aria-label=\"city\"\n              placeholder=\"City\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"cityHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. Washington</em>\n            </small>\n          </section>\n\n          <section className=\"form-group\">\n            <label htmlFor=\"state\"></label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"state\"\n              aria-describedby=\"stateHelp\"\n              aria-label=\"state\"\n              placeholder=\"State\"\n              onChange={handleInputChange}\n            >\n            </input>\n            <small\n              id=\"stateHelp\"\n              className=\"form-text text-muted\"\n            >\n              <em>ex. DC</em>\n            </small>\n          </section>\n\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n\n        </form>\n\n      </section>\n\n    );\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\n\nclass UserAddress extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"user address loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressReset,\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card userAddress\">\n\n        <section className=\"card-body\">\n\n          <h4 className=\"card-title\">Your registration address: </h4>\n\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"card-text\">{votingData.normalizedInput.line1}</li>\n            { votingData.normalizedInput.line2 ?\n              <li className=\"card-text\">{votingData.normalizedInput.line2}</li>\n            : null }\n            <li className=\"card-text\">{votingData.normalizedInput.city}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.state}</li>\n            <li className=\"card-text\">{votingData.normalizedInput.zip}</li>\n          </ul>\n\n        </section>\n\n        <section className=\"card-footer\">\n\n          <button \n            className=\"btn btn-outline-secondary\"\n            onClick={addressReset}\n            type=\"button\"\n          >\n            Change Address\n          </button>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default UserAddress;\n","import React, { Component } from 'react';\n\nclass VoterInformation extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"voter information loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n\n      <section className=\"card voterInformation\">\n\n        <section className=\"card-body\">\n\n          <h4 className=\"card-title\" hidden >Voter Information</h4>\n\n          <ul className=\"voteInfoButtons\">\n\n            <li>\n              <a\n                href={votingData.state[0].electionAdministrationBody.ballotInfoUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <button type=\"button\" className=\"btn btn-primary\">\n                  Current Ballot\n                </button>\n              </a>\n            </li>\n\n            <li>\n              <a\n                href={votingData.state[0].electionAdministrationBody.electionInfoUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    Election Info\n                  </button>\n              </a>\n            </li>\n\n            <li>\n              \n              <a\n                href={votingData.state[0].electionAdministrationBody.votingLocationFinderUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                    Voting Location Info\n                  </button>\n              </a>\n            </li>\n\n          </ul>\n\n          <section className=\"card electionAuthorityAddress\">\n          \n            <section className=\"card-body\">\n              <h5 className=\"card-title\">Election Authority Address</h5>\n              <p className=\"card-text\"><b>{votingData.state[0].electionAdministrationBody.name}</b></p>\n              <p className=\"card-text\">{votingData.state[0].electionAdministrationBody.correspondenceAddress.line1},</p>\n              <p className=\"card-text\">\n                {votingData.state[0].electionAdministrationBody.correspondenceAddress.city}, {votingData.state[0].electionAdministrationBody.correspondenceAddress.state}  {votingData.state[0].electionAdministrationBody.correspondenceAddress.zip}\n              </p>\n            </section>\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default VoterInformation;\n","import React, { Component } from 'react';\n\nclass OfficeRaces extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"race loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData\n    } = this.props;\n\n    return (\n      \n      <section className=\"card upcomingRacesCard\">\n      \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#upcomingRaces\"\n          aria-expanded=\"true\"\n          aria-controls=\"#upcomingRaces\"\n        >\n          Upcoming Races\n        </button>\n        \n        <section className=\"collapse\" id=\"upcomingRaces\">\n            \n          <section className=\"card text-center officeRaces\">\n    \n            {votingData ?\n            \n              votingData.contests.map((contest, key) => {\n              \n              if(contest.candidates) {\n      \n                return <section\n                  className=\"card raceCandidates\"\n                  key={key}\n                >\n      \n                  <section\n                    className=\"card-header\"\n                  >\n                    <h5 className=\"card-title\">{contest.office}</h5>\n                  </section>\n                  \n                  <section className=\"card-body\">\n        \n                      {contest.candidates.map((candidate, key) => {\n        \n                        return <section className=\"card\" key={key}>\n                          <section className=\"card-body\">\n                            <h5 className=\"card-title\">{candidate.name}</h5>\n                            <h6 className=\"card-subtitle text-muted\">{candidate.party}</h6>\n                            <a\n                              href={candidate.candidateUrl}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"card-link\"\n                            >\n                              Website\n                            </a>\n                          </section>\n                        </section>\n        \n                      })}\n        \n                  </section>\n      \n                </section>;\n                \n              } else {\n                return null;\n              }\n      \n                }) \n              \n              :null }\n    \n          </section>\n          \n        </section>\n      \n      </section>\n\n    );\n  }\n}\n\nexport default OfficeRaces;\n","import React, { Component } from 'react';\n\nclass Referendum extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"ballots loaded\");\n  }\n\n\n  render() {\n\n    const {\n      votingData,\n      votingDataArray\n    } = this.props;\n\n    return (\n      \n      <section className=\"card upcomingReferendumCard\">\n      \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#upcomingReferendum\"\n          aria-expanded=\"true\"\n          aria-controls=\"#upcomingReferendum\"\n        >\n          Upcoming Referendum\n        </button>\n        \n        <section className=\"collapse\" id=\"upcomingReferendum\">\n        \n          { votingDataArray[3].some(contest => contest.type === \"Referendum\") ?\n          \n            votingData.contests.map((contest, key) => {\n            \n              if(contest.type === \"Referendum\") {\n      \n                return <section\n                  className=\"card referendum\"\n                  key={key}\n                >\n                \n                  <section className=\"card-body\">\n                \n                    <h5 className=\"card-title\">{contest.referendumTitle}</h5>\n                    <h6 className=\"card-subtitle\">{contest.referendumSubtitle}</h6>\n\n                    <p className=\"card-text\">\n                      <a \n                        href={contest.referendumUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Referendum Link\n                      </a>\n                    </p>\n                    \n                  </section>\n  \n                </section>;\n      \n              } else {\n              \n                return null;\n                \n              }\n    \n            }) \n            \n          : <p className=\"card-text my-auto\">No upcoming Referendum</p> }\n  \n          </section>\n  \n      </section>\n\n    );\n  }\n}\n\nexport default Referendum;\n","import React, { Component } from 'react';\n\nclass FederalRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"federal representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>Federal Representatives</h4>\n        \n        <section className=\"card federalRepresentativesCard\">\n\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#fedReps\"\n            aria-expanded=\"true\"\n            aria-controls=\"#fedReps\"\n          >\n            Federal Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"fedReps\"\n          >\n          \n            <section className=\"federalRepresentatives card-body text-center\">\n            \n            {electedRepresentativesData ?\n              // get offices that have a level key/value that is \"country\" and iterate\n              electedRepresentativesData.offices\n                .filter(office => office.levels)\n                .filter(office => office.levels[0] === \"country\")\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n  \n                    return <section className=\"card\" key={key}>\n                      \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n  \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                        \n                        <figure>\n                          <img\n                            className=\"card-img-top\"\n                            src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                            alt={electedRepresentativesData.officials[officialIndex].name}\n                          ></img>\n                        </figure>\n                        \n                        : null }\n                    \n                        <h5 className=\"card-title\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n                })\n  \n              :null }\n            \n            </section>\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default FederalRepresentatives;\n","import React, { Component } from 'react';\n\nclass StateRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"state representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>State Representatives</h4>\n        \n        <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#stateReps\"\n            aria-expanded=\"true\"\n            aria-controls=\"#stateReps\"\n          >\n            State Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"stateReps\"\n          >\n        \n            <section className=\"card-body text-center stateRepresentatives\">\n            \n            {electedRepresentativesData ?\n              // get offices that have a level key/value that is \"country\" and iterate\n              electedRepresentativesData.offices\n                .filter(office => office.levels)\n                .filter(office => office.levels[0] === \"administrativeArea1\")\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n                  \n                    return <section className=\"card\" key={key}>\n                    \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n  \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                          <figure>\n                            <img\n                              className=\"card-img-top\"\n                              src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                              alt={electedRepresentativesData.officials[officialIndex].name}\n                            ></img>\n                          </figure>\n                        : null }\n                      \n                        <h5 className=\"card-text\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-text text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                        \n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n              })\n  \n            :null }\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default StateRepresentatives;\n","import React, { Component } from 'react';\n\nclass LocalRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"local representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card\">\n\n        <h4 className=\"card-title\" hidden>Local Representatives</h4>\n          \n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#localReps\"\n          aria-expanded=\"true\"\n          aria-controls=\"#localReps\"\n        >\n          Local Representatives\n        </button>\n\n        <section\n          className=\"collapse\"\n          id=\"localReps\"\n        >\n\n          <section className=\"card-body text-center localRepresentatives\">\n  \n            {electedRepresentativesData ?\n  \n              electedRepresentativesData.offices\n                .filter(office => !office.levels)\n                .map((office, key) => {\n  \n                return <section\n                  className=\"card\"\n                  key={office.name}\n                >\n  \n                  {office.officialIndices.map((officialIndex, key) => {\n  \n                    return <section className=\"card\" key={key}>\n                    \n                      <section className=\"card-header\">\n                      \n                        <h5 className=\"card-title\">{office.name}</h5>\n                        \n                      </section>\n                      \n                      <section className=\"card-body\">\n                      \n                        { electedRepresentativesData.officials[officialIndex].photoUrl ?\n                          <figure>\n                            <img\n                              className=\"card-img-top\"\n                              src={electedRepresentativesData.officials[officialIndex].photoUrl}\n                              alt={electedRepresentativesData.officials[officialIndex].name}\n                            ></img>\n                          </figure>\n                        : null}\n                      \n                        <h5 className=\"card-text\">\n                          {electedRepresentativesData.officials[officialIndex].name}\n                        </h5>\n                        <h6 className=\"card-text mb-2 text-muted\">\n                          {electedRepresentativesData.officials[officialIndex].party}\n                        </h6>\n                        <a\n                          href={electedRepresentativesData.officials[officialIndex].urls}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"card-link\"\n                        >\n                          Website\n                        </a>\n                        \n                      </section>\n                      \n                    </section>;\n  \n                  })}\n  \n                </section>;\n  \n                })\n  \n              :null }\n            \n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default LocalRepresentatives;\n","import React, { Component } from 'react';\nimport FederalRepresentatives from './FederalRepresentatives';\nimport StateRepresentatives from './StateRepresentatives';\nimport LocalRepresentatives from './LocalRepresentatives';\n\nclass ElectedRepresentatives extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"elected representatives loaded\");\n  }\n\n\n  render() {\n\n    const {\n      electedRepresentativesData,\n    } = this.props;\n\n    return (\n\n      <section className=\"card electedRepresentatives\">\n\n        <h4 className=\"card-title\" hidden>Elected Representatives</h4>\n\n        <section className=\"card representativesCard\">\n\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#electedRepresentatives\"\n            aria-expanded=\"true\"\n            aria-controls=\"#electedRepresentatives\"\n          >\n            Your Representatives\n          </button>\n\n          <section\n            className=\"collapse\"\n            id=\"electedRepresentatives\"\n          >\n\n          { electedRepresentativesData ?\n\n          <section>\n\n            <FederalRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n            <StateRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n            <LocalRepresentatives\n              electedRepresentativesData={electedRepresentativesData}\n            />\n\n          </section>\n\n          : null }\n\n          </section>\n\n        </section>\n\n      </section>\n\n    );\n  }\n}\n\nexport default ElectedRepresentatives;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport apikey from './secrets';\nimport Header from './Header';\nimport Footer from './Footer';\nimport AddressForm from './AddressForm';\nimport UserAddress from './UserAddress';\nimport VoterInformation from './VoterInformation';\nimport OfficeRaces from './OfficeRaces';\nimport Referendum from './Referendum';\nimport ElectedRepresentatives from './ElectedRepresentatives';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      addressSubmitted: false,\n      electionsData: null,\n      electionsDataRecieved: false,\n      electedRepresentativesData: null,\n      electedRepresentativesDataRecieved: false,\n      street1: undefined,\n      street2: undefined,\n      city: undefined,\n      state: undefined,\n      country: undefined,\n      votingData: null,\n      votingDataArray: null,\n      votingDataRecieved: false\n\n    };\n  }\n\n  addressReset = () => {\n    this.setState({\n      addressSubmitted: false,\n      street1: \"\",\n      street2: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\"\n    });\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchElectionData();\n    this.fetchElectedRepresentativesData();\n    this.fetchVoterData();\n    this.setState(prevState => ({\n      addressSubmitted: !this.state.addressSubmitted\n    }))\n  }\n\n  fetchElectionData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/elections?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electionsData => {\n        this.setState({\n          electionsData: electionsData,\n          electionsDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchElectedRepresentativesData = () => {\n\n    const {street1, city, state} = this.state;\n\n    fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=${apikey}&address=${street1}.${city} ${state}`)\n      .then(res => res.json())\n      .then(electedRepresentativesData => {\n        this.setState({\n          electedRepresentativesData: electedRepresentativesData,\n          electedRepresentativesDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchVoterData = () => {\n\n    const {street1, city, state} = this.state;\n    let votingUrl = `https://www.googleapis.com/civicinfo/v2/voterinfo?key=${apikey}&address=${street1}.${city} ${state}&electionId=2000`;\n\n    fetch(votingUrl)\n      .then(res => res.json())\n      .then((votingData) => {\n        this.setState({\n          votingData: votingData,\n          votingDataArray: Object.values(votingData),\n          votingDataRecieved: true\n        });\n      })\n      .catch(error => console.log(error));\n\n  }\n\n  componentDidMount() {\n    console.log(\"App loaded\");\n  }\n\n\n  render() {\n\n    const {\n      addressSubmitted,\n      electedRepresentativesData,\n      electedRepresentativesDataRecieved,\n      votingData,\n      votingDataArray,\n      votingDataRecieved\n    } = this.state;\n\n    return (\n\n      <section className=\"app\">\n\n        <Header />\n\n        <main role=\"main\" aria-label=\"main\">\n\n          { votingDataRecieved && addressSubmitted ?\n            <UserAddress\n              addressReset={this.addressReset}\n              votingData={votingData}\n            />\n          : <AddressForm\n                    handleInputChange={this.handleInputChange}\n                    handleSubmit={this.handleSubmit}\n                    />\n          }\n\n\n          { votingDataRecieved ?\n\n            <section className=\"dataOutput\">\n\n              <section className=\"votingInformation\">\n\n                <VoterInformation\n                  votingData={votingData}\n                />\n\n                <ElectedRepresentatives\n                  electedRepresentativesData={electedRepresentativesData}\n                  electedRepresentativesDataRecieved={electedRepresentativesDataRecieved}\n                />\n\n              </section>\n\n              <section className=\"electionsInformation\">\n\n                <OfficeRaces\n                  votingData={votingData}\n                />\n\n                <Referendum\n                  votingData={votingData}\n                  votingDataArray={votingDataArray}\n                />\n\n              </section>\n\n            </section>\n\n          :\n\n            <section className=\"card text-muted informationPlaceholder\">\n\n              <h4 className=\"card-title\">Please enter your address in the form</h4>\n              <p className=\"card-text\">Your voting and election information will appear here</p>\n\n            </section>\n\n          }\n\n        </main>\n\n        <Footer />\n\n      </section>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}